[{"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\index.js":"1","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\login.js":"2","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\workers\\ViewWorker.js":"3","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\App.js":"4","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\Avatar.js":"5","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\workers\\EditWorker.js":"6","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\reportWebVitals.js":"7","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\Nav.js":"8","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\workers\\DeleteWorker.js":"9","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\workers\\AddWorker.js":"10","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\projects\\AddProject.js":"11","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\projects\\EditProject.js":"12","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\projects\\ViewProject.js":"13","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\projects\\DeleteProject.js":"14","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\workers\\Workers.js":"15","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\projects\\Projects.js":"16","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\company\\EditCompanyDetails.js":"17","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\company\\CompanyDetails.js":"18","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\company\\Info.js":"19","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\Loader.js":"20","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\LogoutModal.js":"21","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\reports\\Reports.js":"22","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\reports\\EditReport.js":"23","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\reports\\AddReport.js":"24","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\reports\\DeleteReport.js":"25","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\reports\\ViewReport.js":"26","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\FinanceManagement.js":"27","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\incomes\\Incomes.js":"28","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\expenses\\Expenses.js":"29","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\expenses\\DeleteExpense.js":"30","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\expenses\\AddExpense.js":"31","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\expenses\\EditExpense.js":"32","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\expenses\\ViewExpense.js":"33","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\incomes\\AddIncome.js":"34","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\incomes\\ViewIncome.js":"35","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\incomes\\EditIncome.js":"36","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\incomes\\DeleteIncome.js":"37","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\missions\\EditMission.js":"38","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\missions\\Missions.js":"39","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\missions\\ViewMission.js":"40","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\missions\\DeleteMission.js":"41","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\missions\\AddMission.js":"42","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\priceQuotation\\Annotate.js":"43","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\priceQuotation\\manually\\CreateQuote.js":"44","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\priceQuotation\\manually\\PdfCreate.js":"45","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\priceQuotation\\manually\\jspdfHebrewSupport\\David-normal.js":"46"},{"size":561,"mtime":1620240064341,"results":"47","hashOfConfig":"48"},{"size":4318,"mtime":1620240099948,"results":"49","hashOfConfig":"48"},{"size":2657,"mtime":1620240344631,"results":"50","hashOfConfig":"48"},{"size":8309,"mtime":1620643758967,"results":"51","hashOfConfig":"48"},{"size":363,"mtime":1616255218873,"results":"52","hashOfConfig":"48"},{"size":16671,"mtime":1620503842458,"results":"53","hashOfConfig":"48"},{"size":377,"mtime":1616255218899,"results":"54","hashOfConfig":"48"},{"size":1951,"mtime":1620643257403,"results":"55","hashOfConfig":"48"},{"size":3295,"mtime":1617291558094,"results":"56","hashOfConfig":"48"},{"size":14849,"mtime":1620428206978,"results":"57","hashOfConfig":"48"},{"size":15323,"mtime":1620340213471,"results":"58","hashOfConfig":"48"},{"size":16487,"mtime":1620340811071,"results":"59","hashOfConfig":"48"},{"size":4580,"mtime":1620338037295,"results":"60","hashOfConfig":"48"},{"size":5058,"mtime":1617294712352,"results":"61","hashOfConfig":"48"},{"size":3652,"mtime":1620558969024,"results":"62","hashOfConfig":"48"},{"size":5274,"mtime":1620570118335,"results":"63","hashOfConfig":"48"},{"size":8895,"mtime":1620470417339,"results":"64","hashOfConfig":"48"},{"size":704,"mtime":1620228872028,"results":"65","hashOfConfig":"48"},{"size":8012,"mtime":1620170151533,"results":"66","hashOfConfig":"48"},{"size":255,"mtime":1620043462906,"results":"67","hashOfConfig":"48"},{"size":3095,"mtime":1620238954254,"results":"68","hashOfConfig":"48"},{"size":3979,"mtime":1620570118335,"results":"69","hashOfConfig":"48"},{"size":8162,"mtime":1620504613616,"results":"70","hashOfConfig":"48"},{"size":9795,"mtime":1620502534926,"results":"71","hashOfConfig":"48"},{"size":2933,"mtime":1620570118335,"results":"72","hashOfConfig":"48"},{"size":2245,"mtime":1620489048589,"results":"73","hashOfConfig":"48"},{"size":955,"mtime":1620570118319,"results":"74","hashOfConfig":"48"},{"size":3465,"mtime":1620592938668,"results":"75","hashOfConfig":"48"},{"size":3248,"mtime":1620592961793,"results":"76","hashOfConfig":"48"},{"size":2406,"mtime":1620587402255,"results":"77","hashOfConfig":"48"},{"size":5218,"mtime":1620587530714,"results":"78","hashOfConfig":"48"},{"size":4773,"mtime":1620588039310,"results":"79","hashOfConfig":"48"},{"size":1776,"mtime":1620587305241,"results":"80","hashOfConfig":"48"},{"size":8503,"mtime":1620570118327,"results":"81","hashOfConfig":"48"},{"size":2037,"mtime":1620570118335,"results":"82","hashOfConfig":"48"},{"size":8526,"mtime":1620587962403,"results":"83","hashOfConfig":"48"},{"size":2663,"mtime":1620570118327,"results":"84","hashOfConfig":"48"},{"size":6872,"mtime":1620598032788,"results":"85","hashOfConfig":"48"},{"size":3964,"mtime":1620594039152,"results":"86","hashOfConfig":"48"},{"size":2824,"mtime":1620594288365,"results":"87","hashOfConfig":"48"},{"size":3482,"mtime":1620594681850,"results":"88","hashOfConfig":"48"},{"size":7350,"mtime":1620597785301,"results":"89","hashOfConfig":"48"},{"size":936,"mtime":1620681156162,"results":"90","hashOfConfig":"48"},{"size":12657,"mtime":1620681436697,"results":"91","hashOfConfig":"48"},{"size":3249,"mtime":1620681363197,"results":"92","hashOfConfig":"48"},{"size":63554,"mtime":1620673761053,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"6ga3e",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"113"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"103"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"113"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"113"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"103"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"153"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\index.js",[],["225","226"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\login.js",[],["227","228"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\workers\\ViewWorker.js",["229","230"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Loader from \"../Loader\";\r\nimport Avatar from \"../Avatar\";\r\n\r\nconst Worker = (props) => {\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const { id } = useParams();\r\n\r\n  //console.log(toke)\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/worker/\" + id + \"/edit/\";\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      fetchItems();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const fetchItems = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    setLoader(false);\r\n\r\n    const items = await data.json();\r\n    setItems(items);\r\n  };\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <Link className=\"btn btn-dark\" to=\"/workers_management\">\r\n        Back to Home\r\n      </Link>\r\n      <h1 className=\"display-5\">\r\n        {items.first_name + \" \" + items.second_name}\r\n      </h1>\r\n      <hr />\r\n      <ul className=\"list-group w-50\">\r\n        <li className=\"list-group-item\">\r\n          Profile: <Avatar avatarUrl={items.image} />\r\n        </li>\r\n        <li className=\"list-group-item\">Email: {items.email}</li>\r\n        <li className=\"list-group-item\">phone: {items.phone}</li>\r\n        <li className=\"list-group-item\">ID: {items.id_no}</li>\r\n        <li className=\"list-group-item\">\r\n          ID image: <Avatar avatarUrl={items.id_img} />\r\n        </li>\r\n        <li className=\"list-group-item\">Type: {items.is_admin}</li>\r\n        <li className=\"list-group-item\">Age: {items.age}</li>\r\n        <li className=\"list-group-item\">Address: {items.address}</li>\r\n        <li className=\"list-group-item\">Pay Per Day: {items.pay_per_day}</li>\r\n        <li className=\"list-group-item\">\r\n          Driving License Image:\r\n          <Avatar avatarUrl={items.driving_license_img} />\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          Work License Image: {items.work_license_israel}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          Work License Type: {items.work_license_type}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          Work License Expire: {items.work_license_expire}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Worker;\r\n",["231","232"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\App.js",[],["233","234"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\Avatar.js",["235","236","237","238","239"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport TableScrollbar from \"react-table-scrollbar\";\r\nfunction Avatar(props) {\r\n  let source = props.avatarUrl;\r\n  if (!source) {\r\n    source = \"/images/Network-Profile.png\";\r\n  }\r\n  return <img width=\"150\" height=\"150\" src={source} />;\r\n}\r\n\r\nexport default Avatar;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\workers\\EditWorker.js",["240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loader from \"../Loader\";\r\nimport Avatar from \"../Avatar\";\r\nconst EditWorker = (props) => {\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [previewImage, setPreviewImage] = useState();\r\n  const [previewID, setPreviewID] = useState();\r\n  const [previewDrive, setPreviewDrive] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [idPic, setIdPic] = useState();\r\n  const [drivePic, setDrivePic] = useState();\r\n  const [loader, setLoader] = useState(false);\r\n  const [picUrl, setPicUrl] = useState(\"\");\r\n  const [idPicUrl, setIdPicUrl] = useState();\r\n  const [drivePicUrl, setDrivePicUrl] = useState();\r\n\r\n  const submitDriveImage = () => {\r\n    const newData = new FormData();\r\n    newData.append(\"driving_license_img\", drivePicUrl);\r\n    const requestOptions2 = {\r\n      method: \"PATCH\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    setLoader(true);\r\n    fetch(url, requestOptions2)\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setDrivePicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while updating...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const submitIDImage = () => {\r\n    const newData = new FormData();\r\n    newData.append(\"id_img\", idPicUrl);\r\n    const requestOptions2 = {\r\n      method: \"PATCH\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    setLoader(true);\r\n    fetch(url, requestOptions2)\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setIdPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while updating...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const submitImage = () => {\r\n    const newData = new FormData();\r\n    newData.append(\"image\", picUrl);\r\n    const requestOptions2 = {\r\n      method: \"PATCH\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    setLoader(true);\r\n    fetch(url, requestOptions2)\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while updating...\"));\r\n    setLoader(false);\r\n  };\r\n  const handleDriveImageUpload = () => {\r\n    console.log(pic);\r\n    const data = new FormData();\r\n    data.append(\"file\", drivePic);\r\n    data.append(\"upload_preset\", \"hashmaliProject\");\r\n    data.append(\"cloud_name\", \"dj42j4pqu\");\r\n    setLoader(true);\r\n    fetch(url2, {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setDrivePicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while uploading...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const handleImageUpload = () => {\r\n    console.log(pic);\r\n    const data = new FormData();\r\n    data.append(\"file\", pic);\r\n    data.append(\"upload_preset\", \"hashmaliProject\");\r\n    data.append(\"cloud_name\", \"dj42j4pqu\");\r\n    setLoader(true);\r\n    fetch(url2, {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while uploading...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const handleIdImageUpload = () => {\r\n    console.log(pic);\r\n    const data = new FormData();\r\n    data.append(\"file\", idPic);\r\n    data.append(\"upload_preset\", \"hashmaliProject\");\r\n    data.append(\"cloud_name\", \"dj42j4pqu\");\r\n    setLoader(true);\r\n    fetch(url2, {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setIdPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while uploading...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const imageHandler = (e, name) => {\r\n    let reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      if (name == \"image\") {\r\n        setPreviewImage(e.target.result);\r\n      }\r\n      if (name == \"id_img\") {\r\n        setPreviewID(e.target.result);\r\n      }\r\n      if (name == \"driving_license_img\") {\r\n        setPreviewDrive(e.target.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    if (name == \"image\") {\r\n      setPic(e.target.files[0]);\r\n    }\r\n    if (name == \"id_img\") {\r\n      setIdPic(e.target.files[0]);\r\n    }\r\n    if (name == \"driving_license_img\") {\r\n      setDrivePic(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const [worker, setWorker] = useState({\r\n    first_name: \"\",\r\n    second_name: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n    id_no: \"\",\r\n    id_img: \"\",\r\n    driving_license_img: \"\",\r\n    work_license_israel: \"\",\r\n    work_license_type: \"\",\r\n    work_license_expire: \"\",\r\n    age: \"\",\r\n    address: \"\",\r\n    pay_per_day: \"\",\r\n    email: \"\",\r\n    image: \"\",\r\n    is_admin: \"\",\r\n  });\r\n  const {\r\n    first_name,\r\n    second_name,\r\n    password,\r\n    phone,\r\n    id_no,\r\n    id_img,\r\n    driving_license_img,\r\n    work_license_israel,\r\n    work_license_type,\r\n    work_license_expire,\r\n    age,\r\n    address,\r\n    pay_per_day,\r\n    email,\r\n    image,\r\n    is_admin,\r\n  } = worker;\r\n  const onInputChange = (e) => {\r\n    //  onChange={(e)=>setImage(e.target.files[0])}\r\n\r\n    if (e.target.type == \"file\") {\r\n      alert(e.target.name);\r\n      setWorker({ ...worker, [e.target.name]: e.target.files[0] });\r\n      imageHandler(e, e.target.name);\r\n    }\r\n    setWorker({ ...worker, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/worker/\" + id + \"/edit/\";\r\n  var url2 = \"https://api.cloudinary.com/v1_1/dj42j4pqu/image/upload\";\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  function patch_request() {\r\n    const newData = new FormData();\r\n    /* \r\n        first_name, second_name, password, phone, id_no,id_img,driving_license_img,\r\n        work_license_israel,work_license_type,work_license_expire,age,address,\r\n        pay_per_day,email,image,is_admin\r\n        */\r\n    newData.append(\"first_name\", worker.first_name);\r\n    newData.append(\"second_name\", worker.second_name);\r\n\r\n    if (password) {\r\n      newData.append(\"password\", worker.password);\r\n      newData.append(\"password2\", worker.password);\r\n    }\r\n\r\n    newData.append(\"phone\", worker.phone);\r\n    newData.append(\"id_no\", worker.id_no);\r\n    newData.append(\"work_license_israel\", worker.work_license_israel);\r\n    newData.append(\"work_license_type\", worker.work_license_type);\r\n    newData.append(\"work_license_expire\", worker.work_license_expire);\r\n    newData.append(\"age\", worker.age);\r\n    newData.append(\"address\", worker.address);\r\n    newData.append(\"pay_per_day\", worker.pay_per_day);\r\n    newData.append(\"email\", worker.email);\r\n    newData.append(\"is_admin\", worker.is_admin);\r\n    if (pic) {\r\n      handleImageUpload();\r\n    }\r\n    if (idPic) {\r\n      handleIdImageUpload();\r\n    }\r\n    if (drivePic) {\r\n      handleDriveImageUpload();\r\n    }\r\n\r\n    const requestOptions2 = {\r\n      method: \"PATCH\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    return requestOptions2;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      loadWorker();\r\n    }\r\n  }, [props.token]);\r\n\r\n  useEffect(() => {\r\n    if (picUrl) {\r\n      submitImage();\r\n      loadWorker();\r\n    }\r\n  }, [picUrl]);\r\n\r\n  useEffect(() => {\r\n    if (idPicUrl) {\r\n      submitIDImage();\r\n      loadWorker();\r\n    }\r\n  }, [idPicUrl]);\r\n\r\n  useEffect(() => {\r\n    if (drivePicUrl) {\r\n      submitDriveImage();\r\n      loadWorker();\r\n    }\r\n  }, [drivePicUrl]);\r\n\r\n  const loadWorker = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    setLoader(false);\r\n\r\n    const worker_data = await data.json();\r\n    setWorker(worker_data);\r\n    setPreviewImage(worker_data.image);\r\n    setPreviewID(worker_data.id_img);\r\n    setPreviewDrive(worker_data.driving_license_img);\r\n  };\r\n  console.log(status);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //Checking if password and phone are empty\r\n\r\n    //Israeli phone number\r\n    var regex = /^0(5[^7]|[2-4]|[8-9]|7[0-9])[0-9]{7}$/;\r\n    //Checking if phone number is valid\r\n    if (!regex.test(phone)) {\r\n      alert(\"please enter a valid phone number...\");\r\n      return;\r\n    }\r\n\r\n    if (!is_admin) {\r\n      alert(\"please  set user type...\");\r\n      return;\r\n    }\r\n    if (!email) {\r\n      alert(\"please  enter email...\");\r\n      return;\r\n    }\r\n    if (!age) {\r\n      alert(\"please  enter worker age...\");\r\n      return;\r\n    }\r\n\r\n    if (id_no) {\r\n      if (id_no.length > 10) {\r\n        alert(\"ID has more than 10 digits.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    setLoader(true);\r\n    const data = await fetch(url, patch_request()).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status != 200) {\r\n      alert(data.status);\r\n    }\r\n    setLoader(false);\r\n\r\n    const update = await loadWorker();\r\n    if (data.status == 200) {\r\n      alert(\"Successfully updated worker!\");\r\n      history.push(\"/workers_management\");\r\n    }\r\n  };\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto shadow p-5\">\r\n        <Link className=\"btn btn-dark\" to=\"/workers_management\">\r\n          Back to Workers\r\n        </Link>\r\n\r\n        <h2 className=\"text-center mb-4\">Edit Worker Details:</h2>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Worker First Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker first name\"\r\n              name=\"first_name\"\r\n              value={first_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Worker Last Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker last name\"\r\n              name=\"second_name\"\r\n              value={second_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Password\r\n            </Label>\r\n\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Phone Number\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker phone number\"\r\n              name=\"phone\"\r\n              value={phone}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Email\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Avatar avatarUrl={previewImage} />\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Upload a photo\r\n            </Label>\r\n\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              onChange={(e) => onInputChange(e)}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Is an admin?\r\n            </Label>\r\n            <select\r\n              className=\"form-control form-control-lg\"\r\n              name=\"is_admin\"\r\n              value={is_admin}\r\n              onChange={(e) => onInputChange(e)}\r\n            >\r\n              <option>Choosing</option>\r\n              <option value=\"false\">No</option>\r\n              <option value=\"true\">Yes</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              age\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker age\"\r\n              name=\"age\"\r\n              value={age}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              address\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker address\"\r\n              name=\"address\"\r\n              value={address}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Pay per day\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker pay per day\"\r\n              name=\"pay_per_day\"\r\n              value={pay_per_day}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Id\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker id\"\r\n              name=\"id_no\"\r\n              value={id_no}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Upload Id image\r\n            </Label>\r\n\r\n            <Avatar avatarUrl={previewID} />\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Upload worker image\"\r\n              name=\"id_img\"\r\n              onChange={(e) => onInputChange(e)}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Avatar avatarUrl={previewDrive} />\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Upload driving license image\r\n            </Label>\r\n\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Upload worker driving license image\"\r\n              name=\"driving_license_img\"\r\n              onChange={(e) => onInputChange(e)}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Israel Work license\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Upload worker work license israel\"\r\n              name=\"work_license_israel\"\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Israel Work license due date\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Upload worker work license expire date\"\r\n              name=\"work_license_expire\"\r\n              value={work_license_expire}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <button className=\"btn btn-dark btn-block\">Update Worker</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditWorker;\r\n",["260","261"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\reportWebVitals.js",[],["262","263"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\Nav.js",["264","265","266"],"import React, { useEffect, useState } from \"react\";\r\nimport { Menu, Segment, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LogoutModal from \"./LogoutModal\";\r\nexport default function MenuExampleInvertedSegment(props) {\r\n  const [activeItem, setActiveItem] = useState(\"My Company\");\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.activeItem) {\r\n      setActiveItem(props.activeItem);\r\n    }\r\n  }, [props.activeItem]);\r\n\r\n  console.log(activeItem);\r\n\r\n  return (\r\n    <Segment inverted style={{ backgroundColor: \"black\" }}>\r\n      <Menu inverted secondary style={{ backgroundColor: \"black\" }}>\r\n        <Menu.Item\r\n          name=\"My Company\"\r\n          active={activeItem === \"My Company\"}\r\n          as={Link}\r\n          to=\"/Home\"\r\n        />\r\n        <Menu.Item\r\n          name=\"Workers Management\"\r\n          active={activeItem === \"Workers Management\"}\r\n          as={Link}\r\n          to=\"/workers_management\"\r\n        />\r\n        <Menu.Item\r\n          name=\"Projects\"\r\n          active={activeItem === \"Projects\"}\r\n          as={Link}\r\n          to=\"/projects\"\r\n        />\r\n        <Menu.Item\r\n          name=\"Price Quote\"\r\n          active={activeItem === \"Price Quote\"}\r\n          as={Link}\r\n          to=\"/annotate\"\r\n        />\r\n        <Menu.Item\r\n          name=\"Reports\"\r\n          active={activeItem === \"Reports\"}\r\n          as={Link}\r\n          to=\"/reports\"\r\n        />\r\n        <Menu.Item\r\n          name=\"Finance\"\r\n          active={activeItem === \"Finance\"}\r\n          as={Link}\r\n          to=\"/finance\"\r\n        />\r\n        <Menu.Item\r\n          name=\"Missions\"\r\n          active={activeItem === \"Missions\"}\r\n          as={Link}\r\n          to=\"/missions\"\r\n        />\r\n\r\n        <Menu.Item name=\"Logout\" active={activeItem === \"Logout\"}>\r\n          <LogoutModal token={props.token}></LogoutModal>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Segment>\r\n  );\r\n}\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\workers\\DeleteWorker.js",["267","268","269","270"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport Loader from \"../Loader\";\r\nimport Avatar from \"../Avatar\";\r\n\r\nconst Worker = (props) => {\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/worker/\" + id + \"/edit/\";\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  const requestOptions2 = {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: toke },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      fetchItems();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const deleteWorker = async (id) => {\r\n    const data = await fetch(url, requestOptions2).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status == 204) {\r\n      alert(\"Succesffully deleted worker!\");\r\n      history.push(\"/workers_management\");\r\n    }\r\n  };\r\n\r\n  const fetchItems = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n\r\n    const items = await data.json();\r\n    setLoader(false);\r\n\r\n    setItems(items);\r\n  };\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <h1 className=\"display-5\">\r\n        Are you sure you want to delete{\" \"}\r\n        {items.first_name + \" \" + items.second_name}?\r\n      </h1>\r\n\r\n      <Link className=\"btn btn-primary\" to=\"/workers_management\">\r\n        Cancel\r\n      </Link>\r\n      <button\r\n        className=\"btn btn-danger\"\r\n        style={{ marginLeft: \"20px\" }}\r\n        onClick={() => deleteWorker(id)}\r\n      >\r\n        Confirm Delete\r\n      </button>\r\n\r\n      <h1 className=\"display-5\"></h1>\r\n      <hr />\r\n      <ul className=\"list-group w-50\">\r\n        <li className=\"list-group-item\">\r\n          Profile: <Avatar avatarUrl={items.image} />\r\n        </li>\r\n        <li className=\"list-group-item\">Email: {items.email}</li>\r\n        <li className=\"list-group-item\">phone: {items.phone}</li>\r\n        <li className=\"list-group-item\">ID: {items.id_no}</li>\r\n        <li className=\"list-group-item\">\r\n          ID image: <Avatar avatarUrl={items.id_img} />\r\n        </li>\r\n        <li className=\"list-group-item\">Type: {items.is_admin}</li>\r\n        <li className=\"list-group-item\">Age: {items.age}</li>\r\n        <li className=\"list-group-item\">Address: {items.address}</li>\r\n        <li className=\"list-group-item\">Pay Per Day: {items.pay_per_day}</li>\r\n        <li className=\"list-group-item\">\r\n          Driving License Image: {items.driving_license_img}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          Work License Image: {items.work_license_israel}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          Work License Type: {items.work_license_type}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          Work License Expire: {items.work_license_expire}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Worker;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\workers\\AddWorker.js",["271","272","273","274","275","276","277","278","279","280","281","282","283","284"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loader from \"../Loader\";\r\nimport ImageFilterFrames from \"material-ui/svg-icons/image/filter-frames\";\r\n\r\nconst AddWorker = (props) => {\r\n  let history = useHistory();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const [previewImage, setPreviewImage] = useState();\r\n  const [previewID, setPreviewID] = useState();\r\n  const [previewDrive, setPreviewDrive] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [idPic, setIdPic] = useState();\r\n  const [drivePic, setDrivePic] = useState();\r\n\r\n  const [picUrl, setPicUrl] = useState();\r\n  const [idPicUrl, setIdPicUrl] = useState();\r\n  const [drivePicUrl, setDrivePicUrl] = useState();\r\n  const handleImageUpload1 = () => {\r\n    console.log(pic);\r\n    const data = new FormData();\r\n    data.append(\"file\", pic);\r\n    data.append(\"upload_preset\", \"hashmaliProject\");\r\n    data.append(\"cloud_name\", \"dj42j4pqu\");\r\n    setLoader(true);\r\n    fetch(url2, {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while uploading...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const handleImageUpload2 = () => {\r\n    console.log(pic);\r\n    const data = new FormData();\r\n    data.append(\"file\", pic);\r\n    data.append(\"upload_preset\", \"hashmaliProject\");\r\n    data.append(\"cloud_name\", \"dj42j4pqu\");\r\n    setLoader(true);\r\n    fetch(url2, {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setIdPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while uploading...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const handleImageUpload3 = () => {\r\n    console.log(pic);\r\n    const data = new FormData();\r\n    data.append(\"file\", pic);\r\n    data.append(\"upload_preset\", \"hashmaliProject\");\r\n    data.append(\"cloud_name\", \"dj42j4pqu\");\r\n    setLoader(true);\r\n    fetch(url2, {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setDrivePicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while uploading...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const imageHandler = (e, name) => {\r\n    let reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      if (name == \"image\") {\r\n        setPreviewImage(e.target.result);\r\n      }\r\n      if (name == \"id_img\") {\r\n        setPreviewID(e.target.result);\r\n      }\r\n      if (name == \"driving_license_img\") {\r\n        setPreviewDrive(e.target.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    if (name == \"image\") {\r\n      setPic(e.target.files[0]);\r\n    }\r\n    if (name == \"id_img\") {\r\n      setIdPic(e.target.files[0]);\r\n    }\r\n    if (name == \"driving_license_img\") {\r\n      setDrivePic(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const [worker, setWorker] = useState({\r\n    first_name: \"\",\r\n    second_name: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n    id_no: \"\",\r\n    id_img: \"\",\r\n    driving_license_img: \"\",\r\n    work_license_israel: \"\",\r\n    work_license_type: \"\",\r\n    work_license_expire: \"\",\r\n    age: \"\",\r\n    address: \"\",\r\n    pay_per_day: \"\",\r\n    email: \"\",\r\n    image: \"\",\r\n    is_admin: \"\",\r\n  });\r\n  const {\r\n    first_name,\r\n    second_name,\r\n    password,\r\n    phone,\r\n    id_no,\r\n    id_img,\r\n    driving_license_img,\r\n    work_license_israel,\r\n    work_license_type,\r\n    work_license_expire,\r\n    age,\r\n    address,\r\n    pay_per_day,\r\n    email,\r\n    image,\r\n    is_admin,\r\n  } = worker;\r\n  const onInputChange = (e) => {\r\n    console.log(e.target.value);\r\n\r\n    if (e.target.type == \"file\") {\r\n      alert(e.target.name);\r\n      setWorker({ ...worker, [e.target.name]: e.target.files[0] });\r\n      imageHandler(e, e.target.name);\r\n    }\r\n    setWorker({ ...worker, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url = \"https://hashmali-backend.herokuapp.com/api/worker/register/\";\r\n  var url2 = \"https://api.cloudinary.com/v1_1/dj42j4pqu/image/upload\";\r\n\r\n  function post_request() {\r\n    const newData = new FormData();\r\n    /* \r\n        first_name, second_name, password, phone, id_no,id_img,driving_license_img,\r\n        work_license_israel,work_license_type,work_license_expire,age,address,\r\n        pay_per_day,email,image,is_admin\r\n        */\r\n    newData.append(\"first_name\", worker.first_name);\r\n    newData.append(\"second_name\", worker.second_name);\r\n    newData.append(\"password\", worker.password);\r\n    newData.append(\"password2\", worker.password);\r\n    newData.append(\"phone\", worker.phone);\r\n    newData.append(\"id_no\", worker.id_no);\r\n    newData.append(\"work_license_israel\", worker.work_license_israel);\r\n    newData.append(\"work_license_type\", worker.work_license_type);\r\n    newData.append(\"work_license_expire\", worker.work_license_expire);\r\n    newData.append(\"age\", worker.age);\r\n    newData.append(\"address\", worker.address);\r\n    newData.append(\"pay_per_day\", worker.pay_per_day);\r\n    newData.append(\"email\", worker.email);\r\n    newData.append(\"is_admin\", worker.is_admin);\r\n    if (pic) {\r\n      handleImageUpload1();\r\n      console.log(picUrl);\r\n      newData.append(\"image\", picUrl);\r\n    }\r\n    if (idPic) {\r\n      handleImageUpload2();\r\n      console.log(idPicUrl);\r\n      newData.append(\"id_img\", idPicUrl);\r\n    }\r\n    if (drivePic) {\r\n      handleImageUpload3();\r\n      console.log(drivePicUrl);\r\n      newData.append(\"driving_license_img\", drivePicUrl);\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    return requestOptions;\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //Checking if password and phone are empty\r\n    if (!first_name || !second_name) {\r\n      alert(\"please provide worker name and last name...\");\r\n      return;\r\n    }\r\n\r\n    //Checking if password and phone are empty\r\n    if (!password || !phone) {\r\n      alert(\"please provide phone number and password...\");\r\n      return;\r\n    }\r\n\r\n    //Israeli phone number\r\n    var regex = /^0(5[^7]|[2-4]|[8-9]|7[0-9])[0-9]{7}$/;\r\n    //Checking if phone number is valid\r\n    if (!regex.test(phone)) {\r\n      alert(\"please enter a valid phone number...\");\r\n      return;\r\n    }\r\n\r\n    if (!is_admin) {\r\n      alert(\"please  set user type...\");\r\n      return;\r\n    }\r\n\r\n    //Checking if password and phone are empty\r\n    if (!image || !id_img || !driving_license_img) {\r\n      alert(\"please upload worker profile pic,id and license...\");\r\n      return;\r\n    }\r\n    if (id_no.length > 10) {\r\n      alert(\"ID has more than 10 digits.\");\r\n      return;\r\n    }\r\n\r\n    const data = await fetch(url, post_request()).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status) {\r\n      if (data.status != 201) {\r\n        alert(data.status);\r\n      }\r\n      if (data.status == 201) {\r\n        alert(\"Successfully created worker!\");\r\n        history.push(\"/workers_management\");\r\n      }\r\n    }\r\n  };\r\n  if (loader) {\r\n    return (\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Loader />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto shadow p-5\">\r\n        <Link className=\"btn btn-dark\" to=\"/workers_management\">\r\n          Back to Home\r\n        </Link>\r\n\r\n        <h2 className=\"text-center mb-4\">Fill in Worker Details:</h2>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Worker First Name\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker first name\"\r\n              name=\"first_name\"\r\n              value={first_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Worker Last Name\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker last name\"\r\n              name=\"second_name\"\r\n              value={second_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Password\r\n            </Label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Phone Number\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker phone number\"\r\n              name=\"phone\"\r\n              value={phone}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Email\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Avatar avatarUrl={previewImage} />\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Upload a photo\r\n            </Label>\r\n\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              onChange={(e) => onInputChange(e)}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Is an admin?\r\n            </Label>\r\n            <select\r\n              className=\"form-control form-control-lg\"\r\n              name=\"is_admin\"\r\n              value={is_admin}\r\n              onChange={(e) => onInputChange(e)}\r\n            >\r\n              <option>Choosing</option>\r\n              <option value=\"false\">No</option>\r\n              <option value=\"true\">Yes</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              age\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker age\"\r\n              name=\"age\"\r\n              value={age}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              address\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker address\"\r\n              name=\"address\"\r\n              value={address}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Pay per day\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker pay per day\"\r\n              name=\"pay_per_day\"\r\n              value={pay_per_day}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Id\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter worker id\"\r\n              name=\"id_no\"\r\n              value={id_no}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Avatar avatarUrl={previewID} />\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Upload Id image\r\n            </Label>\r\n\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Upload worker image\"\r\n              name=\"id_img\"\r\n              onChange={(e) => onInputChange(e)}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Avatar avatarUrl={previewDrive} />\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Upload driving license image\r\n            </Label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Upload worker driving license image\"\r\n              name=\"driving_license_img\"\r\n              onChange={(e) => onInputChange(e)}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Israel Work license\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"worker work license israel\"\r\n              name=\"work_license_israel\"\r\n              value={work_license_israel}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Israel Work license due date\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Upload worker work license expire date\"\r\n              name=\"work_license_expire\"\r\n              value={work_license_expire}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <button className=\"btn btn-dark btn-block\">Create Worker</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddWorker;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\projects\\AddProject.js",["285","286","287","288","289","290","291","292","293","294","295","296"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loader from \"../Loader\";\r\n\r\nconst AddProject = (props) => {\r\n  let history = useHistory();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [previewImage, setPreviewImage] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picUrl, setPicUrl] = useState();\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const handleImageUpload = () => {\r\n    console.log(pic);\r\n    const data = new FormData();\r\n    data.append(\"file\", pic);\r\n    data.append(\"upload_preset\", \"hashmaliProject\");\r\n    data.append(\"cloud_name\", \"dj42j4pqu\");\r\n    setLoader(true);\r\n    fetch(url2, {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while uploading...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const imageHandler = (e, name) => {\r\n    let reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      if (name == \"building_image\") {\r\n        setPreviewImage(e.target.result);\r\n      }\r\n      //     if(name==\"id_img\"){setPreviewID(e.target.result);}\r\n      //   if(name==\"driving_license_img\"){setPreviewDrive(e.target.result);}\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    if (name == \"building_image\") {\r\n      setPic(e.target.files[0]);\r\n    }\r\n    // if(name==\"id_img\"){setIdPic(e.target.files[0])}\r\n    //if(name==\"driving_license_img\"){setDrivePic(e.target.files[0])}\r\n  };\r\n\r\n  const [project, setProject] = useState({\r\n    project_code: \"\",\r\n    property_type: \"\",\r\n    address_link: \"\",\r\n    city: \"\",\r\n    street: \"\",\r\n    property_no: \"\",\r\n    owner_first_name: \"\",\r\n    owner_second_name: \"\",\r\n    owner_phone_no: \"\",\r\n    owner_email: \"\",\r\n    contractor_first_name: \"\",\r\n    contractor_second_name: \"\",\r\n    contractor_phone_no: \"\",\r\n    contractor_email: \"\",\r\n    architect_first_name: \"\",\r\n    architect_second_name: \"\",\r\n    architect_phone_no: \"\",\r\n    architect_email: \"\",\r\n    building_image: \"\",\r\n    progress: \"\",\r\n  });\r\n\r\n  const {\r\n    project_code,\r\n    property_type,\r\n    address_link,\r\n    city,\r\n    street,\r\n    property_no,\r\n    owner_first_name,\r\n    owner_second_name,\r\n    owner_phone_no,\r\n    owner_email,\r\n    contractor_first_name,\r\n    contractor_second_name,\r\n    contractor_phone_no,\r\n    contractor_email,\r\n    architect_first_name,\r\n    architect_second_name,\r\n    architect_phone_no,\r\n    architect_email,\r\n    building_image,\r\n    progress,\r\n  } = project;\r\n\r\n  const onInputChange = (e) => {\r\n    //  onChange={(e)=>setImage(e.target.files[0])}\r\n\r\n    if (e.target.type == \"file\") {\r\n      alert(e.target.name);\r\n      setProject({ ...project, [e.target.name]: e.target.files[0] });\r\n      imageHandler(e, e.target.name);\r\n    }\r\n    setProject({ ...project, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url = \"https://hashmali-backend.herokuapp.com/api/project/create/\";\r\n  var url2 = \"https://api.cloudinary.com/v1_1/dj42j4pqu/image/upload\";\r\n\r\n  function post_request() {\r\n    const newData = new FormData();\r\n    /* \r\n         project_code, property_type, address_link, city, street,property_no,\r\n          owner_first_name,owner_second_name,owner_phone_no,owner_email,\r\n          contractor_first_name,contractor_second_name,contractor_phone_no,contractor_email,\r\n          architect_first_name,architect_second_name,architect_phone_no,architect_email,building_image\r\n      */\r\n    newData.append(\"project_code\", project.project_code);\r\n    newData.append(\"property_type\", project.property_type);\r\n    newData.append(\"address_link\", project.address_link);\r\n    newData.append(\"city\", project.city);\r\n\r\n    newData.append(\"owner_first_name\", project.owner_first_name);\r\n    newData.append(\"owner_second_name\", project.owner_second_name);\r\n    newData.append(\"owner_phone_no\", project.owner_phone_no);\r\n    newData.append(\"owner_email\", project.owner_email);\r\n\r\n    newData.append(\"contractor_first_name\", project.contractor_first_name);\r\n    newData.append(\"contractor_second_name\", project.contractor_second_name);\r\n    newData.append(\"contractor_phone_no\", project.contractor_phone_no);\r\n    newData.append(\"contractor_email\", project.contractor_email);\r\n\r\n    newData.append(\"architect_first_name\", project.architect_first_name);\r\n    newData.append(\"architect_second_name\", project.architect_second_name);\r\n    newData.append(\"architect_phone_no\", project.architect_phone_no);\r\n    newData.append(\"architect_second_name\", project.architect_email);\r\n    newData.append(\"progress\", project.progress);\r\n    if (pic) {\r\n      handleImageUpload();\r\n      console.log(picUrl);\r\n      newData.append(\"building_image\", picUrl);\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    return requestOptions;\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = await fetch(url, post_request()).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status != 201) {\r\n      alert(data.status);\r\n    }\r\n    if (data.status == 201) {\r\n      alert(\"Successfully created project!\");\r\n      history.push(\"/projects\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto shadow p-5\">\r\n        <Link className=\"btn btn-dark\" to=\"/projects\">\r\n          Back to Projects\r\n        </Link>\r\n\r\n        <h2 className=\"text-center mb-4\">Create a new Project</h2>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <hr />\r\n          <h4 className=\"text-center mb-4\">Project</h4>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Project Code\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter project code\"\r\n              name=\"project_code\"\r\n              value={project_code}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4 className=\"text-center mb-4\">Property</h4>\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Property Type\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter property type\"\r\n              name=\"property_type\"\r\n              value={property_type}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Property Number\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter property number\"\r\n              name=\"property_no\"\r\n              value={property_no}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Address\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter address\"\r\n              name=\"address_link\"\r\n              value={address_link}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              City\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter city name\"\r\n              name=\"city\"\r\n              value={city}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Street\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter street name\"\r\n              name=\"street\"\r\n              value={street}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <h4 className=\"text-center mb-4\">Owner</h4>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Owner Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter owner first name \"\r\n              name=\"owner_first_name\"\r\n              value={owner_first_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Owner Last Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter owner last name \"\r\n              name=\"owner_second_name\"\r\n              value={owner_second_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Owner Phone Number\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter owner phone number\"\r\n              name=\"owner_phone_no\"\r\n              value={owner_phone_no}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Owner Email\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter owner email\"\r\n              name=\"owner_email\"\r\n              value={owner_email}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <h4 className=\"text-center mb-4\">Contractor</h4>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Contractor Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter contractor first name \"\r\n              name=\"contractor_first_name\"\r\n              value={contractor_first_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Contractor Last Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter contractor last name \"\r\n              name=\"contractor_second_name\"\r\n              value={contractor_second_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Contractor Phone\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter contractor phone number\"\r\n              name=\"contractor_phone_no\"\r\n              value={contractor_phone_no}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Contractor Email\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter contractor email\"\r\n              name=\"contractor_email\"\r\n              value={contractor_email}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <h4 className=\"text-center mb-4\">Architect</h4>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Architect Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter architect first name \"\r\n              name=\"architect_first_name\"\r\n              value={architect_first_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Architect Last Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter architect last name \"\r\n              name=\"architect_second_name\"\r\n              value={architect_second_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Architect Phone\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter architect phone number\"\r\n              name=\"architect_phone_no\"\r\n              value={architect_phone_no}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Architect Email\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter architect email\"\r\n              name=\"architect_email\"\r\n              value={architect_email}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Project Progress?\r\n            </Label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Update Project progress\"\r\n              name=\"progress\"\r\n              value={progress}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Avatar avatarUrl={previewImage} />\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Upload project Image\r\n            </Label>\r\n\r\n            <input\r\n              type=\"file\"\r\n              name=\"building_image\"\r\n              onChange={(e) => onInputChange(e)}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n\r\n          <button className=\"btn btn-dark btn-block\">Create Project</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProject;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\projects\\EditProject.js",["297","298","299","300","301","302","303","304","305","306"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loader from \"../Loader\";\r\nimport Avatar from \"../Avatar\";\r\n\r\nconst EditProject = (props) => {\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [previewImage, setPreviewImage] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picUrl, setPicUrl] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const submitImage = () => {\r\n    const newData = new FormData();\r\n    newData.append(\"building_image\", picUrl);\r\n    const requestOptions2 = {\r\n      method: \"PATCH\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    setLoader(true);\r\n    fetch(url, requestOptions2)\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while updating...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const handleImageUpload = () => {\r\n    console.log(pic);\r\n    const data = new FormData();\r\n    data.append(\"file\", pic);\r\n    data.append(\"upload_preset\", \"hashmaliProject\");\r\n    data.append(\"cloud_name\", \"dj42j4pqu\");\r\n    setLoader(true);\r\n    fetch(url2, {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while uploading...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const imageHandler = (e, name) => {\r\n    let reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      if (name == \"building_image\") {\r\n        setPreviewImage(e.target.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    if (name == \"building_image\") {\r\n      setPic(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const [project, setProject] = useState({\r\n    project_code: \"\",\r\n    property_type: \"\",\r\n    address_link: \"\",\r\n    city: \"\",\r\n    street: \"\",\r\n    property_no: \"\",\r\n    owner_first_name: \"\",\r\n    owner_second_name: \"\",\r\n    owner_phone_no: \"\",\r\n    owner_email: \"\",\r\n    contractor_first_name: \"\",\r\n    contractor_second_name: \"\",\r\n    contractor_phone_no: \"\",\r\n    contractor_email: \"\",\r\n    architect_first_name: \"\",\r\n    architect_second_name: \"\",\r\n    architect_phone_no: \"\",\r\n    architect_email: \"\",\r\n    building_image: \"\",\r\n    progress: \"\",\r\n  });\r\n  const {\r\n    project_code,\r\n    property_type,\r\n    address_link,\r\n    city,\r\n    street,\r\n    property_no,\r\n    owner_first_name,\r\n    owner_second_name,\r\n    owner_phone_no,\r\n    owner_email,\r\n    contractor_first_name,\r\n    contractor_second_name,\r\n    contractor_phone_no,\r\n    contractor_email,\r\n    architect_first_name,\r\n    architect_second_name,\r\n    architect_phone_no,\r\n    architect_email,\r\n    building_image,\r\n    progress,\r\n  } = project;\r\n\r\n  const onInputChange = (e) => {\r\n    //  onChange={(e)=>setImage(e.target.files[0])}\r\n\r\n    if (e.target.type == \"file\") {\r\n      alert(e.target.name);\r\n      setProject({ ...project, [e.target.name]: e.target.files[0] });\r\n      imageHandler(e, e.target.name);\r\n    }\r\n    setProject({ ...project, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/project/\" + id + \"/manage/\";\r\n  var url2 = \"https://api.cloudinary.com/v1_1/dj42j4pqu/image/upload\";\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  function patch_request() {\r\n    const newData = new FormData();\r\n    /* \r\n           project_code, property_type, address_link, city, street,property_no,\r\n            owner_first_name,owner_second_name,owner_phone_no,owner_email,\r\n            contractor_first_name,contractor_second_name,contractor_phone_no,contractor_email,\r\n            architect_first_name,architect_second_name,architect_phone_no,architect_email,building_image\r\n        */\r\n    newData.append(\"project_code\", project.project_code);\r\n    newData.append(\"property_type\", project.property_type);\r\n    newData.append(\"address_link\", project.address_link);\r\n    newData.append(\"city\", project.city);\r\n\r\n    newData.append(\"owner_first_name\", project.owner_first_name);\r\n    newData.append(\"owner_second_name\", project.owner_second_name);\r\n    newData.append(\"owner_phone_no\", project.owner_phone_no);\r\n    newData.append(\"owner_email\", project.owner_email);\r\n\r\n    newData.append(\"contractor_first_name\", project.contractor_first_name);\r\n    newData.append(\"contractor_second_name\", project.contractor_second_name);\r\n    newData.append(\"contractor_phone_no\", project.contractor_phone_no);\r\n    newData.append(\"contractor_email\", project.contractor_email);\r\n\r\n    newData.append(\"architect_first_name\", project.architect_first_name);\r\n    newData.append(\"architect_second_name\", project.architect_second_name);\r\n    newData.append(\"architect_phone_no\", project.architect_phone_no);\r\n    newData.append(\"architect_second_name\", project.architect_email);\r\n    newData.append(\"progress\", project.progress);\r\n\r\n    if (pic) {\r\n      handleImageUpload();\r\n    }\r\n\r\n    const requestOptions2 = {\r\n      method: \"PUT\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    return requestOptions2;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      loadProject();\r\n    }\r\n  }, [props.token]);\r\n\r\n  useEffect(() => {\r\n    if (picUrl) {\r\n      submitImage();\r\n      loadProject();\r\n    }\r\n  }, [picUrl]);\r\n\r\n  const loadProject = async () => {\r\n    setLoader(true);\r\n\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    setLoader(false);\r\n\r\n    const project_data = await data.json();\r\n    setProject(project_data);\r\n    setPreviewImage(project_data.building_image);\r\n    //setPreviewID(project_data.id_img)\r\n    // setPreviewDrive(project_data.driving_license_img)\r\n  };\r\n  console.log(status);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n\r\n    const data = await fetch(url, patch_request()).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status != 200) {\r\n      alert(data.status);\r\n    }\r\n    setLoader(false);\r\n\r\n    const update = await loadProject();\r\n    if (data.status == 200) {\r\n      alert(\"Successfully updated project!\");\r\n      history.push(\"/projects\");\r\n    }\r\n  };\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto shadow p-5\">\r\n        <Link className=\"btn btn-dark\" to=\"/projects\">\r\n          Back to Projects\r\n        </Link>\r\n\r\n        <h2 className=\"text-center mb-4\">Edit Project Details:</h2>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <hr />\r\n          <h4 className=\"text-center mb-4\">Project</h4>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Project Code\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter project code\"\r\n              name=\"project_code\"\r\n              value={project_code}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4 className=\"text-center mb-4\">Property</h4>\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Property Type\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter property type\"\r\n              name=\"property_type\"\r\n              value={property_type}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Property Number\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter property number\"\r\n              name=\"property_no\"\r\n              value={property_no}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Address\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter address\"\r\n              name=\"address_link\"\r\n              value={address_link}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              City\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter city name\"\r\n              name=\"city\"\r\n              value={city}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Street\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter street name\"\r\n              name=\"street\"\r\n              value={street}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <h4 className=\"text-center mb-4\">Owner</h4>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Owner Name\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter owner first name \"\r\n              name=\"owner_first_name\"\r\n              value={owner_first_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Owner Last Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter owner last name \"\r\n              name=\"owner_second_name\"\r\n              value={owner_second_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Owner Phone Number\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter owner phone number\"\r\n              name=\"owner_phone_no\"\r\n              value={owner_phone_no}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Owner Email\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter owner email\"\r\n              name=\"owner_email\"\r\n              value={owner_email}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <h4 className=\"text-center mb-4\">Contractor</h4>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Contractor Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter contractor first name \"\r\n              name=\"contractor_first_name\"\r\n              value={contractor_first_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Contractor Last Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter contractor last name \"\r\n              name=\"contractor_second_name\"\r\n              value={contractor_second_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Contractor Phone\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter contractor phone number\"\r\n              name=\"contractor_phone_no\"\r\n              value={contractor_phone_no}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Contractor Email\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter contractor email\"\r\n              name=\"contractor_email\"\r\n              value={contractor_email}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <h4 className=\"text-center mb-4\">Architect</h4>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Architect Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter architect first name \"\r\n              name=\"architect_first_name\"\r\n              value={architect_first_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Architect Last Name\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter architect last name \"\r\n              name=\"architect_second_name\"\r\n              value={architect_second_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Architect Phone\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter architect phone number\"\r\n              name=\"architect_phone_no\"\r\n              value={architect_phone_no}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Architect Email\r\n            </Label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter architect email\"\r\n              name=\"architect_email\"\r\n              value={architect_email}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Project Progress?\r\n            </Label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Update Project progress\"\r\n              name=\"progress\"\r\n              value={progress}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Avatar avatarUrl={previewImage} />\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Upload project Image\r\n            </Label>\r\n\r\n            <input\r\n              type=\"file\"\r\n              name=\"building_image\"\r\n              onChange={(e) => onInputChange(e)}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n\r\n          <button className=\"btn btn-dark btn-block\">Update Project</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProject;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\projects\\ViewProject.js",["307","308","309","310"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Loader from \"../Loader\";\r\nimport Avatar from \"../Avatar\";\r\n\r\nconst Project = (props) => {\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const { id } = useParams();\r\n\r\n  //console.log(toke)\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/project/\" + id + \"/manage/\";\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      fetchItems();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const fetchItems = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    setLoader(false);\r\n\r\n    const items = await data.json();\r\n    setItems(items);\r\n  };\r\n  console.log(status);\r\n\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <Link className=\"btn btn-dark\" to=\"/projects\">\r\n        Back to Projects\r\n      </Link>\r\n      <h1 className=\"display-5\" style={{ textAlign: \"center\" }}>\r\n        Project Code: {items.project_code}\r\n      </h1>\r\n      <hr />\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <ul className=\"list-group w-50\">\r\n          <li className=\"list-group-item\">\r\n            Property Type: {items.property_type}\r\n          </li>\r\n          <li className=\"list-group-item\">Address: {items.address_link}</li>\r\n          <li className=\"list-group-item\">City: {items.city}</li>\r\n          <li className=\"list-group-item\">Street: {items.street}</li>\r\n          <li className=\"list-group-item\">property_no: {items.property_no}</li>\r\n        </ul>\r\n\r\n        <ul className=\"list-group w-50\">\r\n          <li className=\"list-group-item\">\r\n            <a\r\n              href={`https://www.waze.com/live-map?utm_source=waze_website&utm_campaign=waze_website&utm_medium=website_menu`}\r\n              target=\"_blank\"\r\n            >\r\n              Open Waze\r\n            </a>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <a href={`https://www.google.co.il/maps`} target=\"_blank\">\r\n              Open Google Maps\r\n            </a>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"list-group w-50\" style={{ marginLeft: \"15px\" }}>\r\n          <li className=\"list-group-item\">\r\n            Owner First Name: {items.owner_first_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Owner Last Name: {items.owner_second_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Owner Phone: {items.owner_phone_no}\r\n          </li>\r\n          <li className=\"list-group-item\">Owner Email: {items.owner_email}</li>\r\n        </ul>\r\n\r\n        <ul className=\"list-group w-50\" style={{ marginLeft: \"15px\" }}>\r\n          <li className=\"list-group-item\">\r\n            Contractor First Name: {items.contractor_first_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Contractor Last Name: {items.contractor_second_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Contractor Phone: {items.contractor_phone_no}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Contractor Email: {items.contractor_email}\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"list-group w-50\" style={{ marginLeft: \"15px\" }}>\r\n          <li className=\"list-group-item\">\r\n            Architect First Name: {items.architect_first_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Architect Last Name: {items.architect_second_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Architect Phone: {items.architect_phone_no}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Architect Email: {items.architect_email}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n/*\r\n\r\n            project_code, property_type, address_link, city, street,property_no,\r\n            owner_first_name,owner_second_name,owner_phone_no,owner_email,\r\n            contractor_first_name,contractor_second_name,contractor_phone_no,contractor_email,\r\n            architect_first_name,architect_second_name,architect_phone_no,architect_email,image\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n",["311","312"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\projects\\DeleteProject.js",["313","314"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport Loader from \"../Loader\";\r\nimport Avatar from \"../Avatar\";\r\n\r\nconst Project = (props) => {\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/project/\" + id + \"/manage/\";\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  const requestOptions2 = {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: toke },\r\n  };\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      fetchItems();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const deleteProject = async (id) => {\r\n    const data = await fetch(url, requestOptions2).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status == 204) {\r\n      alert(\"Succesffully deleted project!\");\r\n      history.push(\"/projects\");\r\n    }\r\n  };\r\n  const fetchItems = async () => {\r\n    setLoader(true);\r\n\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    const items = await data.json();\r\n    setLoader(false);\r\n\r\n    setItems(items);\r\n  };\r\n  console.log(status);\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <h1 className=\"display-5\">\r\n        Are you sure you want to delete project-{items.project_code}?\r\n      </h1>\r\n\r\n      <Link className=\"btn btn-primary\" to=\"/projects\">\r\n        Cancel\r\n      </Link>\r\n      <button\r\n        className=\"btn btn-danger\"\r\n        style={{ marginLeft: \"20px\" }}\r\n        onClick={() => deleteProject(id)}\r\n      >\r\n        Confirm Delete\r\n      </button>\r\n      <hr />\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <ul className=\"list-group w-50\">\r\n          <li className=\"list-group-item\">\r\n            Property Type: {items.property_type}\r\n          </li>\r\n          <li className=\"list-group-item\">Address: {items.address_link}</li>\r\n          <li className=\"list-group-item\">City: {items.city}</li>\r\n          <li className=\"list-group-item\">Street: {items.street}</li>\r\n          <li className=\"list-group-item\">property_no: {items.property_no}</li>\r\n        </ul>\r\n\r\n        <ul className=\"list-group w-50\" style={{ marginLeft: \"15px\" }}>\r\n          <li className=\"list-group-item\">\r\n            Owner First Name: {items.owner_first_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Owner Last Name: {items.owner_second_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Owner Phone: {items.owner_phone_no}\r\n          </li>\r\n          <li className=\"list-group-item\">Owner Email: {items.owner_email}</li>\r\n        </ul>\r\n\r\n        <ul className=\"list-group w-50\" style={{ marginLeft: \"15px\" }}>\r\n          <li className=\"list-group-item\">\r\n            Contractor First Name: {items.contractor_first_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Contractor Last Name: {items.contractor_second_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Contractor Phone: {items.contractor_phone_no}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Contractor Email: {items.contractor_email}\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"list-group w-50\" style={{ marginLeft: \"15px\" }}>\r\n          <li className=\"list-group-item\">\r\n            Architect First Name: {items.architect_first_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Architect Last Name: {items.architect_second_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Architect Phone: {items.architect_phone_no}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Architect Email: {items.architect_email}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <ul className=\"list-group w-50\" style={{ marginTop: \"15px\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <li className=\"list-group-item\">\r\n            <Avatar avatarUrl={items.image} />\r\n          </li>\r\n          <li className=\"list-group-item\" style={{ marginLeft: \"10px\" }}>\r\n            <Avatar avatarUrl={items.image} />\r\n          </li>\r\n          <li className=\"list-group-item\" style={{ marginLeft: \"10px\" }}>\r\n            <Avatar avatarUrl={items.image} />\r\n          </li>\r\n          <li className=\"list-group-item\" style={{ marginLeft: \"10px\" }}>\r\n            <Avatar avatarUrl={items.image} />\r\n          </li>\r\n          <li className=\"list-group-item\" style={{ marginLeft: \"10px\" }}>\r\n            <Avatar avatarUrl={items.image} />\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n",["315","316"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\workers\\Workers.js",["317","318","319","320","321"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"../Avatar\";\r\nimport Nav from \"../Nav\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport Loader from \"../Loader\";\r\n\r\nconst List = (props) => {\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      fetchItems();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const fetchItems = async () => {\r\n    console.log(toke);\r\n\r\n    const data = await fetch(\r\n      \"https://hashmali-backend.herokuapp.com/api/worker/\",\r\n      requestOptions\r\n    ).catch((error) => console.error(error));\r\n    setStatus(data.status);\r\n    const items = await data.json();\r\n    setItems(items);\r\n  };\r\n  if (status != 200) {\r\n    return (\r\n      <div>\r\n        <Nav activeItem=\"Workers Management\" token={props.token} />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"100px\",\r\n          }}\r\n        >\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#343a40\"\r\n            height={150}\r\n            width={150}\r\n            timeout={3000} //3 secs\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n\r\n      <div className=\"container\">\r\n        <div className=\"py-4\">\r\n          <h1>List Of Workers:</h1>\r\n          <table className=\"table border shadow\">\r\n            <thead style={{ backgroundColor: \"black\" }}>\r\n              <tr style={{ color: \"white\" }}>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Last Name</th>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Phone</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Profile</th>\r\n                <th>Action</th>\r\n                <th scope=\"col\">\r\n                  <Link to={`/workers/create`}>\r\n                    <Button icon=\"add\" color=\"yellow\" />\r\n                  </Link>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.map((worker, index) => (\r\n                <tr>\r\n                  <th scope=\"row\">{index + 1}</th>\r\n                  <td>{worker.first_name}</td>\r\n                  <td>{worker.second_name}</td>\r\n                  <td>{worker.id_no}</td>\r\n                  <td>{worker.phone}</td>\r\n                  <td>{worker.email}</td>\r\n\r\n                  <td>\r\n                    <Avatar avatarUrl={worker.image} />\r\n                  </td>\r\n\r\n                  <td>\r\n                    <Link to={`/workers/${worker.id}`}>\r\n                      <Button icon=\"eye\" color=\"teal\" />\r\n                    </Link>\r\n                    <Link to={`/workers/edit/${worker.id}`}>\r\n                      <Button icon=\"edit\" color=\"blue\" />\r\n                    </Link>\r\n                    <Link to={`/workers/delete/${worker.id}`}>\r\n                      <Button icon=\"delete\" color=\"red\" />\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default List;\r\n",["322","323"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\projects\\Projects.js",["324","325"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\company\\EditCompanyDetails.js",["326","327","328","329","330","331","332","333","334","335","336","337"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Loader from \"../Loader\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nconst EditCompanyDetails = (props) => {\r\n  let history = useHistory();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [selectedManager, setSelectedManager] = useState(\"\");\r\n  const [selectedDirector, setSelectedDirector] = useState(\"\");\r\n  const [previewImage, setPreviewImage] = useState();\r\n  const [pic, setPic] = useState(\"\");\r\n  const [picUrl, setPicUrl] = useState(\"\");\r\n\r\n  const [loader, setLoader] = useState(false);\r\n  const imageHandler = (e, name) => {\r\n    let reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      if (name == \"logo\") {\r\n        setPreviewImage(e.target.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    if (name == \"logo\") {\r\n      setPic(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const [info, setInfo] = useState({\r\n    company_name: \"\",\r\n    logo: \"\",\r\n    manager: \"\",\r\n    deputy_director: \"\",\r\n  });\r\n\r\n  const { company_name, logo, manager, deputy_director } = info;\r\n\r\n  const [workers, setWorkers] = useState([]);\r\n\r\n  const onInputChange = (e) => {\r\n    //  onChange={(e)=>setImage(e.target.files[0])}\r\n\r\n    if (e.target.type == \"file\") {\r\n      alert(e.target.name);\r\n      setInfo({ ...info, [e.target.name]: e.target.files[0] });\r\n      imageHandler(e, e.target.name);\r\n    }\r\n    setInfo({ ...info, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url = \"https://hashmali-backend.herokuapp.com/api/info/1/update/\";\r\n  var url2 = \"https://hashmali-backend.herokuapp.com/api/worker/\";\r\n  var url3 = \"https://hashmali-backend.herokuapp.com/api/info/1/\";\r\n  var url4 = \"https://api.cloudinary.com/v1_1/dj42j4pqu/image/upload\";\r\n\r\n  const handleImageUpload = () => {\r\n    console.log(pic);\r\n    const data = new FormData();\r\n    data.append(\"file\", pic);\r\n    data.append(\"upload_preset\", \"hashmaliProject\");\r\n    data.append(\"cloud_name\", \"dj42j4pqu\");\r\n    setLoader(true);\r\n    fetch(url4, {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while uploading...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  function patch_request() {\r\n    const newData = new FormData();\r\n    /*company_name, logo, manager, deputy_director*/\r\n    newData.append(\"company_name\", info.company_name);\r\n    newData.append(\"manager\", info.manager);\r\n    newData.append(\"deputy_director\", info.deputy_director);\r\n\r\n    const requestOptions2 = {\r\n      method: \"PATCH\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    return requestOptions2;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      loadDetails();\r\n      loadWorkers();\r\n      getSelected();\r\n    }\r\n  }, [props.token]);\r\n\r\n  useEffect(() => {\r\n    if (picUrl) {\r\n      submitImage();\r\n      loadDetails();\r\n      loadWorkers();\r\n      getSelected();\r\n    }\r\n  }, [picUrl]);\r\n\r\n  const loadDetails = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    setLoader(false);\r\n    const company_data = await data.json();\r\n    setInfo(company_data);\r\n    setPreviewImage(company_data.logo);\r\n  };\r\n  console.log(status);\r\n\r\n  const loadWorkers = async () => {\r\n    const data = await fetch(url2, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n\r\n    setStatus(data.status);\r\n    const workers_data = await data.json();\r\n    setWorkers(workers_data);\r\n  };\r\n  console.log(status);\r\n\r\n  const getSelected = async () => {\r\n    const data = await fetch(url3, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    const selected_data = await data.json();\r\n    setSelectedManager(\r\n      selected_data.manager.first_name + \" \" + selected_data.manager.second_name\r\n    );\r\n    setSelectedDirector(\r\n      selected_data.deputy_director.first_name +\r\n        \" \" +\r\n        selected_data.deputy_director.second_name\r\n    );\r\n  };\r\n  const submitImage = () => {\r\n    const newData = new FormData();\r\n    newData.append(\"logo\", picUrl);\r\n    const requestOptions2 = {\r\n      method: \"PATCH\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    setLoader(true);\r\n    fetch(url, requestOptions2)\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while updating...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    const newData = new FormData();\r\n    /*company_name, logo, manager, deputy_director*/\r\n    newData.append(\"company_name\", info.company_name);\r\n    newData.append(\"manager\", info.manager);\r\n    newData.append(\"deputy_director\", info.deputy_director);\r\n    if (pic) {\r\n      handleImageUpload();\r\n      console.log(picUrl);\r\n      newData.append(\"logo\", picUrl);\r\n    }\r\n\r\n    const requestOptions2 = {\r\n      method: \"PATCH\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n\r\n    const data = await fetch(url, requestOptions2).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status != 200) {\r\n      setLoader(false);\r\n      alert(data.status);\r\n    }\r\n\r\n    const update = await loadDetails();\r\n    if (data.status == 200) {\r\n      alert(\"Successfully updated Company's Details!\");\r\n      setLoader(false);\r\n      if (!pic) {\r\n        history.push(\"/Home\");\r\n      }\r\n    }\r\n  };\r\n\r\n  function handleSelect(e) {\r\n    let { name, value } = e.target;\r\n    console.log(name);\r\n    console.log(value);\r\n    setInfo({ ...info, [name]: parseInt(value) });\r\n    console.log(info);\r\n  }\r\n\r\n  if (loader) {\r\n    return (\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Loader />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto shadow p-5\">\r\n        <Link className=\"btn btn-dark\" to=\"/Home\">\r\n          Back to Home\r\n        </Link>\r\n\r\n        <h2 className=\"text-center mb-4\">Edit Company Details:</h2>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <hr />\r\n          <h4 className=\"text-center mb-4\">Companys Name:</h4>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter company's name\"\r\n              name=\"company_name\"\r\n              value={company_name}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4 className=\"text-center mb-4\">Company's Logo</h4>\r\n\r\n            <div className=\"form-group\">\r\n              <Avatar avatarUrl={previewImage} />\r\n              <input\r\n                type=\"file\"\r\n                name=\"logo\"\r\n                onChange={(e) => onInputChange(e)}\r\n                accept=\"image/*\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <h4 className=\"text-center mb-4\">Manager</h4>\r\n          <div>\r\n            <select\r\n              className=\"form-control form-control-lg\"\r\n              aria-label=\"Default select example\"\r\n              name={\"manager\"}\r\n              onChange={handleSelect}\r\n            >\r\n              <option selected>{selectedManager}</option>\r\n              {workers.map((worker) => (\r\n                <option value={worker.id}>\r\n                  {worker.first_name + \" \" + worker.second_name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <h4 className=\"text-center mb-4\">Deputy Director:</h4>\r\n          <div className=\"form-group\">\r\n            <select\r\n              className=\"form-control form-control-lg\"\r\n              aria-label=\"Default select example\"\r\n              name={\"deputy_director\"}\r\n              onChange={handleSelect}\r\n            >\r\n              <option selected>{selectedDirector}</option>\r\n              {workers.map((worker) => (\r\n                <option value={worker.id}>\r\n                  {worker.first_name + \" \" + worker.second_name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <button className=\"btn btn-dark btn-block\">Update Details</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCompanyDetails;\r\n",["338","339"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\company\\CompanyDetails.js",["340","341","342","343","344","345","346"],"import React, { useState, useEffect } from \"react\";\r\nimport Nav from \"../Nav\";\r\nimport Info from \"./Info\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst source = \"/images/logo.png\";\r\nexport default function CompanyDetails(props) {\r\n  const styles = {\r\n    background: \"white\",\r\n    pic: {\r\n      width: 180,\r\n      height: 180,\r\n      borderRadius: 180 / 2,\r\n      overflow: \"hidden\",\r\n      borderWidth: 3,\r\n    },\r\n    move: {\r\n      marginLeft: 600,\r\n    },\r\n  };\r\n  return (\r\n    <div>\r\n      <Nav activeItem=\"My Company\" token={props.token} />\r\n      <Info id={props.id} token={props.token} />\r\n    </div>\r\n  );\r\n}\r\n",["347","348"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\company\\Info.js",["349","350","351","352","353"],"import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Loader\";\r\nimport PhoneAndroidSharpIcon from \"@material-ui/icons/PhoneAndroidSharp\";\r\nimport EmailSharpIcon from \"@material-ui/icons/EmailSharp\";\r\nimport BusinessSharpIcon from \"@material-ui/icons/BusinessSharp\";\r\nimport AssignmentIndSharpIcon from \"@material-ui/icons/AssignmentIndSharp\";\r\nimport Avatar from \"../Avatar\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Info(props) {\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url = \"https://hashmali-backend.herokuapp.com/api/info/1/\";\r\n  var url2 = \"https://hashmali-backend.herokuapp.com/api/info/1/update/\";\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const fetchItems = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    console.log(JSON.stringify(data));\r\n    const items = await data.json();\r\n    setItems(items);\r\n    setLoader(false);\r\n    setStatus(data.status);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      fetchItems();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const classes = useStyles();\r\n\r\n  if (loader) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginTop: \"100px\",\r\n        }}\r\n      >\r\n        <Loader></Loader>\r\n      </div>\r\n    );\r\n  }\r\n  if (status == \"200\") {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar position=\"relative\"></AppBar>\r\n        <main>\r\n          {/* Hero unit */}\r\n          <div className={classes.heroContent}>\r\n            <Container maxWidth=\"sm\">\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h2\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                <Avatar avatarUrl={items.logo} />\r\n              </Typography>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h2\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                {items.company_name}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n                align=\"center\"\r\n                color=\"textSecondary\"\r\n                paragraph\r\n              >\r\n                The {items.company_name} is a company that specialize in\r\n                electrical and industrial work, which includes the preparation\r\n                of electrical and communication infrastructure.\r\n              </Typography>\r\n              <div className={classes.heroButtons}>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                  <Grid item>\r\n                    <Link to={`/info_edit/`}>\r\n                      <Button icon=\"edit\" variant=\"contained\" color=\"black\" />\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Container>\r\n          </div>\r\n          <Container className={classes.cardGrid} maxWidth=\"md\">\r\n            {/* End hero unit */}\r\n            <Grid container justify=\"center\">\r\n              <Grid xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image={items.manager.image}\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      Company's Manager\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"black\">\r\n                      <AssignmentIndSharpIcon />\r\n                      {items.manager.first_name +\r\n                        \" \" +\r\n                        items.manager.second_name}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"black\">\r\n                      <PhoneAndroidSharpIcon />\r\n                      {items.manager.phone}\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"h6\" color=\"black\">\r\n                      <EmailSharpIcon />\r\n                      {items.manager.email}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"black\">\r\n                      <BusinessSharpIcon />\r\n                      {items.manager.address}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n\r\n              <Grid xs={12} sm={6} md={4}>\r\n                <Card className={classes.card} style={{ marginLeft: \"30px\" }}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image={items.deputy_director.image}\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      Deputy Director\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"black\">\r\n                      <AssignmentIndSharpIcon />\r\n                      {items.deputy_director.first_name +\r\n                        \" \" +\r\n                        items.deputy_director.second_name}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"black\">\r\n                      <PhoneAndroidSharpIcon />\r\n                      {items.deputy_director.phone}\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"h6\" color=\"black\">\r\n                      <EmailSharpIcon />\r\n                      {items.deputy_director.email}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"black\">\r\n                      <BusinessSharpIcon />\r\n                      {items.deputy_director.address}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginTop: \"100px\",\r\n        }}\r\n      >\r\n        <Loader></Loader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\Loader.js",["354"],"import React from \"react\";\r\nimport { Loader, Grid } from \"semantic-ui-react\";\r\n\r\nconst LoaderExampleInlineCentered = () => (\r\n  <Loader size=\"huge\" active inline=\"centered\">\r\n    Loading...\r\n  </Loader>\r\n);\r\n\r\nexport default LoaderExampleInlineCentered;\r\n",["355","356"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\LogoutModal.js",["357","358","359","360","361","362","363","364"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\r\nimport Loader from \"./Loader\";\r\n\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nfunction ModalExampleBasic(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [token, setToken] = useState(true);\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (loader) {\r\n      signOut();\r\n    }\r\n  }, [loader]);\r\n\r\n  function signOut() {\r\n    console.log(props.token);\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n    };\r\n    fetch(\r\n      \"https://hashmali-backend.herokuapp.com/api/worker/logout/\",\r\n      requestOptions\r\n    ).catch((error) => console.error(error));\r\n    setLoader(false);\r\n\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      style={{\r\n        marginTop: \"150px\",\r\n        marginLeft: \"300px\",\r\n      }}\r\n      size=\"mini\"\r\n      basic\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      size=\"small\"\r\n      trigger={<Button icon=\"sign-out\" variant=\"contained\" color=\"black\" />}\r\n    >\r\n      <Header icon>\r\n        <Icon name=\"sign-out\" />\r\n        Exit\r\n      </Header>\r\n      <Modal.Content>\r\n        {loader ? (\r\n          <Loader />\r\n        ) : (\r\n          <p style={{ marginLeft: \"150px\" }}>\r\n            You are about to leave website,are you sure?{\" \"}\r\n          </p>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"black\" inverted onClick={() => setOpen(false)}>\r\n          <Icon name=\"remove\" /> No\r\n        </Button>\r\n        <Button color=\"black\" inverted onClick={() => setLoader(true)}>\r\n          <Icon name=\"checkmark\" /> Yes\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalExampleBasic;\r\n\r\n/*\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport \"./login.css\";\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport Nav from \"./Nav\";\r\n\r\nexport default function LogoutModal(props) {\r\n  console.log(\"I am hereio!\");\r\n  var toke = \"Token \" + props.token + \" \";\r\n  const history = useHistory();\r\n  function check() {\r\n    history.push(\"/\");\r\n  }\r\n  function GetRequest() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n    };\r\n    fetch(\r\n      \"https://hashmali-backend.herokuapp.com/api/worker/logout/\",\r\n      requestOptions\r\n    ).catch((error) => console.error(error));\r\n    check();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"danger\" onClick={GetRequest}>\r\n        Confirm Log Out\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n",["365","366"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\reports\\Reports.js",["367","368","369","370","371"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"../Avatar\";\r\nimport Nav from \"../Nav\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport Loader from \"../Loader\";\r\n\r\nconst Reports = (props) => {\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      fetchItems();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const fetchItems = async () => {\r\n    console.log(toke);\r\n\r\n    const data = await fetch(\r\n      \"https://hashmali-backend.herokuapp.com/api/report/\",\r\n      requestOptions\r\n    ).catch((error) => console.error(error));\r\n    setStatus(data.status);\r\n    const items = await data.json();\r\n    setItems(items);\r\n  };\r\n  if (status != 200) {\r\n    return (\r\n      <div>\r\n        <Nav activeItem=\"Reports\" token={props.token} />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"100px\",\r\n          }}\r\n        >\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#343a40\"\r\n            height={150}\r\n            width={150}\r\n            timeout={3000} //3 secs\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n\r\n      <div className=\"container\">\r\n        <div className=\"py-5\" style={{ width: \"1250px\", marginLeft: \"-100px\" }}>\r\n          <h1>Reports:</h1>\r\n          <table className=\"table border shadow\">\r\n            <thead style={{ backgroundColor: \"black\" }}>\r\n              <tr style={{ color: \"white\" }}>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Worker</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Date</th>\r\n                <th scope=\"col\">Start hour</th>\r\n                <th scope=\"col\">Ending hour</th>\r\n                <th scope=\"col\">Project</th>\r\n                <th scope=\"col\">Image</th>\r\n                <th>Action</th>\r\n                <th scope=\"col\">\r\n                  <Link to={`/reports/create`}>\r\n                    <Button icon=\"add\" color=\"yellow\" />\r\n                  </Link>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.map((report, index) => (\r\n                <tr>\r\n                  <th scope=\"row\">{index + 1}</th>\r\n                  <td>{report.title}</td>\r\n                  <td>\r\n                    {report.worker.first_name + \" \" + report.worker.second_name}\r\n                  </td>\r\n                  <td>{report.description}</td>\r\n                  <td>{report.date}</td>\r\n                  <td>{report.start_hour}</td>\r\n                  <td>{report.ending_hour}</td>\r\n                  {report.project.project_code}\r\n\r\n                  <td>\r\n                    <Avatar avatarUrl={report.image} />\r\n                  </td>\r\n\r\n                  <td>\r\n                    <Link to={`/reports/${report.id}`}>\r\n                      <Button icon=\"eye\" color=\"teal\" />\r\n                    </Link>\r\n                    <Link to={`/reports/edit/${report.id}`}>\r\n                      <Button icon=\"edit\" color=\"blue\" />\r\n                    </Link>\r\n                    <Link to={`/reports/delete/${report.id}`}>\r\n                      <Button icon=\"delete\" color=\"red\" />\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Reports;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\reports\\EditReport.js",["372","373","374","375","376","377","378","379"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\reports\\AddReport.js",["380","381","382","383","384","385","386","387"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loader from \"../Loader\";\r\nimport ImageFilterFrames from \"material-ui/svg-icons/image/filter-frames\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport { TimePicker } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst AddReport = (props) => {\r\n  let history = useHistory();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n\r\n  const [previewImage, setPreviewImage] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picUrl, setPicUrl] = useState();\r\n\r\n  const handleImageUpload1 = () => {\r\n    console.log(pic);\r\n    const data = new FormData();\r\n    data.append(\"file\", pic);\r\n    data.append(\"upload_preset\", \"hashmaliProject\");\r\n    data.append(\"cloud_name\", \"dj42j4pqu\");\r\n    setLoader(true);\r\n    fetch(url2, {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while uploading...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const imageHandler = (e, name) => {\r\n    let reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      if (name == \"image\") {\r\n        setPreviewImage(e.target.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    if (name == \"image\") {\r\n      setPic(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const [report, setReport] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    project: \"\",\r\n    image: \"\",\r\n  });\r\n  const { title, description, project, image } = report;\r\n  const onInputChange = (e) => {\r\n    console.log(e.target.value);\r\n\r\n    if (e.target.type == \"file\") {\r\n      alert(e.target.name);\r\n      setReport({ ...report, [e.target.name]: e.target.files[0] });\r\n      imageHandler(e, e.target.name);\r\n    }\r\n    setReport({ ...report, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  function handleSelect(e) {\r\n    let { name, value } = e.target;\r\n    console.log(name);\r\n    console.log(value);\r\n    setReport({ ...report, [name]: parseInt(value) });\r\n    console.log(report);\r\n  }\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var workerID = props.id;\r\n  var url = \"https://hashmali-backend.herokuapp.com/api/report/create/\";\r\n  var url2 = \"https://api.cloudinary.com/v1_1/dj42j4pqu/image/upload\";\r\n  var url3 = \"https://hashmali-backend.herokuapp.com/api/project/\";\r\n\r\n  function post_request() {\r\n    const newData = new FormData();\r\n    /* \r\n    title,\r\n    description,\r\n    start_hour,\r\n    ending_hour,\r\n    project,\r\n    image,  \r\n\r\n        */\r\n    newData.append(\"title\", report.title);\r\n    newData.append(\"worker\", workerID);\r\n    newData.append(\"description\", report.description);\r\n\r\n    let djangoFormatDate =\r\n      startDate.getFullYear() +\r\n      \"-\" +\r\n      (startDate.getMonth() + 1) +\r\n      \"-\" +\r\n      startDate.getDate();\r\n\r\n    console.log(djangoFormatDate);\r\n    newData.append(\"date\", djangoFormatDate);\r\n\r\n    let djangoFormatStartTime =\r\n      startTime.hour() + \":\" + startTime.minute() + \":\" + startTime.seconds();\r\n    newData.append(\"start_hour\", djangoFormatStartTime);\r\n    let djangoFormatEndTime =\r\n      endTime.hour() + \":\" + endTime.minute() + \":\" + endTime.seconds();\r\n    newData.append(\"ending_hour\", djangoFormatEndTime);\r\n    newData.append(\"project\", report.project);\r\n    newData.append(\"image\", report.image);\r\n    if (pic) {\r\n      handleImageUpload1();\r\n      console.log(picUrl);\r\n      newData.append(\"image\", picUrl);\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    return requestOptions;\r\n  }\r\n  const requestOptions2 = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //Checking if password and phone are empty\r\n    if (!title) {\r\n      alert(\"please provide report title...\");\r\n      return;\r\n    }\r\n    //Checking if password and phone are empty\r\n    if (!description) {\r\n      alert(\"please provide report details...\");\r\n      return;\r\n    }\r\n    if (!startDate) {\r\n      alert(\"please provide date...\");\r\n      return;\r\n    }\r\n    if (!startTime) {\r\n      alert(\"please provide start time...\");\r\n      return;\r\n    }\r\n    if (!endTime) {\r\n      alert(\"please provide finish time...\");\r\n      return;\r\n    }\r\n    if (startTime && endTime && endTime.isBefore(startTime)) {\r\n      alert(\"finish hour can't be greater than start time...\");\r\n      return;\r\n    }\r\n\r\n    //Checking if password and phone are empty\r\n    if (!image) {\r\n      alert(\"please upload image...\");\r\n      return;\r\n    }\r\n    if (!project) {\r\n      alert(\"please choose a project...\");\r\n      return;\r\n    }\r\n\r\n    const data = await fetch(url, post_request()).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status) {\r\n      if (data.status != 201) {\r\n        alert(data.status);\r\n      }\r\n      if (data.status == 201) {\r\n        alert(\"Successfully created report!\");\r\n        history.push(\"/reports\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const loadProjects = async () => {\r\n    const data = await fetch(url3, requestOptions2).catch((error) =>\r\n      console.error(error)\r\n    );\r\n\r\n    setStatus(data.status);\r\n    const projects_data = await data.json();\r\n    setProjects(projects_data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      loadProjects();\r\n    }\r\n  }, [props.token]);\r\n\r\n  if (loader) {\r\n    return (\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Loader />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto shadow p-5\">\r\n        <Link className=\"btn btn-dark\" to=\"/reports\">\r\n          Back to Home\r\n        </Link>\r\n\r\n        <h2 className=\"text-center mb-4\">Fill in Report Details:</h2>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Title\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter report title\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Description\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter report content\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Date\r\n            </Label>\r\n\r\n            <DatePicker\r\n              className=\"form-control form-control-lg\"\r\n              value={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n\r\n              // onChange={(date) => setStartDate(date)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Start Hour\r\n            </Label>\r\n            <div className=\"form-group\">\r\n              <TimePicker\r\n                className=\"form-control form-control-lg\"\r\n                defaultOpenValue={moment(\"00:00:00\", \"HH:mm:ss\")}\r\n                onChange={(value) => setStartTime(value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Finish Hour\r\n            </Label>\r\n            <div className=\"form-group\">\r\n              <TimePicker\r\n                className=\"form-control form-control-lg\"\r\n                defaultOpenValue={moment(\"00:00:00\", \"HH:mm:ss\")}\r\n                onChange={(value) => setEndTime(value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <h4 className=\"text-center mb-4\">Project</h4>\r\n          <div>\r\n            <select\r\n              class=\"form-select\"\r\n              className=\"form-control form-control-lg\"\r\n              name={\"project\"}\r\n              onChange={handleSelect}\r\n            >\r\n              <option>please choose a project:</option>\r\n              {projects\r\n                ? projects.map((project) => (\r\n                    <option value={project.id}>{project.project_code}</option>\r\n                  ))\r\n                : \"\"}\r\n            </select>\r\n          </div>\r\n          <h4 className=\"text-center mb-4\">Photo</h4>\r\n\r\n          <div className=\"form-group\">\r\n            <Avatar avatarUrl={previewImage} />\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Upload a photo\r\n            </Label>\r\n\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              onChange={(e) => onInputChange(e)}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n\r\n          <button className=\"btn btn-dark btn-block\">Create Report</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReport;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\reports\\DeleteReport.js",["388","389","390","391"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport Loader from \"../Loader\";\r\nimport Avatar from \"../Avatar\";\r\n\r\nconst Report = (props) => {\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/report/\" + id + \"/update/\";\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  const requestOptions2 = {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: toke },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      fetchItems();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const deleteReport = async (id) => {\r\n    const data = await fetch(url, requestOptions2).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status == 204) {\r\n      alert(\"Successfully deleted report!\");\r\n      history.push(\"/reports\");\r\n    }\r\n  };\r\n\r\n  const fetchItems = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n\r\n    const items = await data.json();\r\n    setLoader(false);\r\n\r\n    setItems(items);\r\n  };\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <h1 className=\"display-5\">\r\n        Are you sure you want to delete this report-{items.title}?\r\n      </h1>\r\n      <Link className=\"btn btn-primary\" to=\"/reports\">\r\n        Cancel\r\n      </Link>\r\n      <button\r\n        className=\"btn btn-danger\"\r\n        style={{ marginLeft: \"20px\" }}\r\n        onClick={() => deleteReport(id)}\r\n      >\r\n        Confirm Delete\r\n      </button>\r\n\r\n      <h1 className=\"display-5\"> {\"Title:\" + \" \" + items.title}</h1>\r\n\r\n      <hr />\r\n      <ul className=\"list-group w-50\" style={{ justifyContent: \"center\" }}>\r\n        <li className=\"list-group-item\">\r\n          <h3>\r\n            {\" \"}\r\n            Photo: <Avatar avatarUrl={items.image} />\r\n          </h3>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <h3>Worker: {items.worker}</h3>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <h3>Project: {items.project}</h3>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <h3>Report Details: {items.description}</h3>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <h3>Date: {items.date}</h3>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <h3>Start Hour: {items.start_hour}</h3>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <h3>Finish Hour: {items.ending_hour} </h3>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Report;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\reports\\ViewReport.js",["392","393","394"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\FinanceManagement.js",["395"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\incomes\\Incomes.js",["396","397","398","399","400"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\expenses\\Expenses.js",["401","402","403","404","405","406"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\expenses\\DeleteExpense.js",["407","408","409","410"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\expenses\\AddExpense.js",["411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Avatar from \"../../Avatar\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loader from \"../../Loader\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport { TimePicker } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst AddExpense = (props) => {\r\n  let history = useHistory();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n\r\n  const [expense, setExpense] = useState({\r\n    title: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n  });\r\n  const { title, amount, description } = expense;\r\n  const onInputChange = (e) => {\r\n    setExpense({ ...expense, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/finance/expenses/create/\";\r\n\r\n  function post_request() {\r\n    const newData = new FormData();\r\n    /* \r\n       title,\r\n    amount,\r\n    description,\r\n    image,\r\n\r\n        */\r\n    newData.append(\"title\", expense.title);\r\n    newData.append(\"amount\", expense.amount);\r\n    newData.append(\"description\", expense.description);\r\n\r\n    let djangoFormatDate =\r\n      startDate.getFullYear() +\r\n      \"-\" +\r\n      (startDate.getMonth() + 1) +\r\n      \"-\" +\r\n      startDate.getDate();\r\n\r\n    console.log(djangoFormatDate);\r\n    newData.append(\"month\", djangoFormatDate);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    return requestOptions;\r\n  }\r\n  const requestOptions2 = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //Checking if password and phone are empty\r\n    if (!title) {\r\n      alert(\"please provide expense title...\");\r\n      return;\r\n    }\r\n    //Checking if password and phone are empty\r\n    if (!description) {\r\n      alert(\"please provide expense details...\");\r\n      return;\r\n    }\r\n    if (!startDate) {\r\n      alert(\"please provide date...\");\r\n      return;\r\n    }\r\n\r\n    const data = await fetch(url, post_request()).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status) {\r\n      if (data.status != 201) {\r\n        alert(data.status);\r\n      }\r\n      if (data.status == 201) {\r\n        alert(\"Successfully created Expense!\");\r\n        history.push(\"/finance\");\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loader) {\r\n    return (\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Loader />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto shadow p-5\">\r\n        <Link className=\"btn btn-dark\" to=\"/finance\">\r\n          Back to Home\r\n        </Link>\r\n\r\n        <h2 className=\"text-center mb-4\">Fill in Expense Details:</h2>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Title\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter Expense title\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Amount\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter Expense amount\"\r\n              name=\"amount\"\r\n              value={amount}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Description\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter Expense content\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Date\r\n            </Label>\r\n\r\n            <DatePicker\r\n              className=\"form-control form-control-lg\"\r\n              value={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n\r\n              // onChange={(date) => setStartDate(date)}\r\n            />\r\n          </div>\r\n\r\n          <button className=\"btn btn-dark btn-block\">Create Expense</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddExpense;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\expenses\\EditExpense.js",["427","428","429","430","431","432"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loader from \"../../Loader\";\r\nimport Avatar from \"../../Avatar\";\r\n\r\nconst EditExpense = (props) => {\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const [expense, setExpense] = useState({\r\n    title: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n  });\r\n  const { title, amount, description } = expense;\r\n  const onInputChange = (e) => {\r\n    setExpense({ ...expense, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/finance/\" + id + \"/expupdate/\";\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n  const requestOptions3 = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  function patch_request() {\r\n    const newData = new FormData();\r\n    /* \r\n       title,\r\n    amount,\r\n    description,\r\n        */\r\n    newData.append(\"title\", expense.title);\r\n    newData.append(\"amount\", expense.amount);\r\n    newData.append(\"description\", expense.description);\r\n\r\n    const requestOptions2 = {\r\n      method: \"PATCH\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    return requestOptions2;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      loadExpense();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const loadExpense = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    setLoader(false);\r\n    const expense_data = await data.json();\r\n    setExpense(expense_data);\r\n  };\r\n  console.log(status);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //Checking if password and phone are empty\r\n    if (!title) {\r\n      alert(\"please provide Expense title...\");\r\n      return;\r\n    }\r\n    //Checking if password and phone are empty\r\n    if (!description) {\r\n      alert(\"please provide Expense details...\");\r\n      return;\r\n    }\r\n\r\n    setLoader(true);\r\n    const data = await fetch(url, patch_request()).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status != 200) {\r\n      alert(data.status);\r\n    }\r\n    setLoader(false);\r\n\r\n    const update = await loadExpense();\r\n    if (data.status == 200) {\r\n      alert(\"Successfully Edited Expense!\");\r\n      history.push(\"/finance\");\r\n    }\r\n  };\r\n  if (loader) {\r\n    return (\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Loader />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto shadow p-5\">\r\n        <Link className=\"btn btn-dark\" to=\"/finance\">\r\n          Back to Home\r\n        </Link>\r\n\r\n        <h2 className=\"text-center mb-4\">Edit Expense Details:</h2>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Title\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter Expense title\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Amount\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter Expense amount\"\r\n              name=\"amount\"\r\n              value={amount}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Description\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter Expense content\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <button className=\"btn btn-dark btn-block\">Edit Expense</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default EditExpense;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\expenses\\ViewExpense.js",["433","434","435","436"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Loader from \"../../Loader\";\r\nimport Avatar from \"../../Avatar\";\r\n\r\nconst Expense = (props) => {\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const { id } = useParams();\r\n\r\n  //console.log(toke)\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/finance/\" + id + \"/expupdate/\";\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      fetchItems();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const fetchItems = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    setLoader(false);\r\n\r\n    const items = await data.json();\r\n    setItems(items);\r\n  };\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <Link className=\"btn btn-dark\" to=\"/finance\">\r\n        Back to Home\r\n      </Link>\r\n      <h1 className=\"display-5\"> {\"Title:\" + \" \" + items.title}</h1>\r\n      <hr />\r\n      <ul className=\"list-group w-50\" style={{ justifyContent: \"center\" }}>\r\n        <li className=\"list-group-item\">\r\n          <h3>Amount: {items.amount}</h3>\r\n        </li>\r\n\r\n        <li className=\"list-group-item\">\r\n          <h3>Expense Details: {items.description}</h3>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <h3>Date: {items.month}</h3>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expense;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\incomes\\AddIncome.js",["437","438","439","440","441","442","443","444","445","446","447","448","449","450","451"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Avatar from \"../../Avatar\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loader from \"../../Loader\";\r\nimport ImageFilterFrames from \"material-ui/svg-icons/image/filter-frames\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport { TimePicker } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst AddIncome = (props) => {\r\n  let history = useHistory();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n\r\n  const [previewImage, setPreviewImage] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picUrl, setPicUrl] = useState();\r\n\r\n  const handleImageUpload1 = () => {\r\n    console.log(pic);\r\n    const data = new FormData();\r\n    data.append(\"file\", pic);\r\n    data.append(\"upload_preset\", \"hashmaliProject\");\r\n    data.append(\"cloud_name\", \"dj42j4pqu\");\r\n    setLoader(true);\r\n    fetch(url2, {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((image) => {\r\n        setPicUrl(image.url);\r\n      })\r\n      .catch((error) => alert(\"error while uploading...\"));\r\n    setLoader(false);\r\n  };\r\n\r\n  const imageHandler = (e, name) => {\r\n    let reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      if (name == \"image\") {\r\n        setPreviewImage(e.target.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    if (name == \"image\") {\r\n      setPic(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const [income, setIncome] = useState({\r\n    title: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n    project: \"\",\r\n    image: \"\",\r\n  });\r\n  const { title, amount, description, project, image } = income;\r\n  const onInputChange = (e) => {\r\n    if (e.target.type == \"file\") {\r\n      alert(e.target.name);\r\n      setIncome({ ...income, [e.target.name]: e.target.files[0] });\r\n      imageHandler(e, e.target.name);\r\n    }\r\n    setIncome({ ...income, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  function handleSelect(e) {\r\n    let { name, value } = e.target;\r\n    console.log(name);\r\n    console.log(value);\r\n    setIncome({ ...income, [name]: parseInt(value) });\r\n    console.log(income);\r\n  }\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/finance/incomes/create/\";\r\n  var url2 = \"https://api.cloudinary.com/v1_1/dj42j4pqu/image/upload\";\r\n  var url3 = \"https://hashmali-backend.herokuapp.com/api/project/\";\r\n\r\n  function post_request() {\r\n    const newData = new FormData();\r\n    /* \r\n       title,\r\n    amount,\r\n    description,\r\n    project,\r\n    image,\r\n\r\n        */\r\n    newData.append(\"title\", income.title);\r\n    newData.append(\"amount\", income.amount);\r\n    newData.append(\"description\", income.description);\r\n    newData.append(\"project\", income.project);\r\n\r\n    let djangoFormatDate =\r\n      startDate.getFullYear() +\r\n      \"-\" +\r\n      (startDate.getMonth() + 1) +\r\n      \"-\" +\r\n      startDate.getDate();\r\n\r\n    console.log(djangoFormatDate);\r\n    newData.append(\"month\", djangoFormatDate);\r\n    newData.append(\"image\", income.image);\r\n    if (pic) {\r\n      handleImageUpload1();\r\n      console.log(picUrl);\r\n      newData.append(\"image\", picUrl);\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    return requestOptions;\r\n  }\r\n  const requestOptions2 = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //Checking if password and phone are empty\r\n    if (!title) {\r\n      alert(\"please provide income title...\");\r\n      return;\r\n    }\r\n    //Checking if password and phone are empty\r\n    if (!description) {\r\n      alert(\"please provide income details...\");\r\n      return;\r\n    }\r\n    if (!startDate) {\r\n      alert(\"please provide date...\");\r\n      return;\r\n    }\r\n    if (!project) {\r\n      alert(\"please choose a project...\");\r\n      return;\r\n    }\r\n\r\n    const data = await fetch(url, post_request()).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status) {\r\n      if (data.status != 201) {\r\n        alert(data.status);\r\n      }\r\n      if (data.status == 201) {\r\n        alert(\"Successfully created Income!\");\r\n        history.push(\"/finance\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const loadProjects = async () => {\r\n    const data = await fetch(url3, requestOptions2).catch((error) =>\r\n      console.error(error)\r\n    );\r\n\r\n    setStatus(data.status);\r\n    const projects_data = await data.json();\r\n    setProjects(projects_data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      loadProjects();\r\n    }\r\n  }, [props.token]);\r\n\r\n  if (loader) {\r\n    return (\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Loader />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto shadow p-5\">\r\n        <Link className=\"btn btn-dark\" to=\"/finance\">\r\n          Back to Home\r\n        </Link>\r\n\r\n        <h2 className=\"text-center mb-4\">Fill in Income Details:</h2>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Title\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter Income title\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Amount\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter Income amount\"\r\n              name=\"amount\"\r\n              value={amount}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Description\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter Income content\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Date\r\n            </Label>\r\n\r\n            <DatePicker\r\n              className=\"form-control form-control-lg\"\r\n              value={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n\r\n              // onChange={(date) => setStartDate(date)}\r\n            />\r\n          </div>\r\n\r\n          <h4 className=\"text-center mb-4\">Project</h4>\r\n          <div>\r\n            <select\r\n              class=\"form-select\"\r\n              className=\"form-control form-control-lg\"\r\n              name={\"project\"}\r\n              onChange={handleSelect}\r\n            >\r\n              <option>please choose a project:</option>\r\n              {projects\r\n                ? projects.map((project) => (\r\n                    <option value={project.id}>{project.project_code}</option>\r\n                  ))\r\n                : \"\"}\r\n            </select>\r\n          </div>\r\n          <h4 className=\"text-center mb-4\">Photo</h4>\r\n\r\n          <div className=\"form-group\">\r\n            <Avatar avatarUrl={previewImage} />\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Upload a photo\r\n            </Label>\r\n\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              onChange={(e) => onInputChange(e)}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n\r\n          <button className=\"btn btn-dark btn-block\">Create Income</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddIncome;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\incomes\\ViewIncome.js",["452","453","454"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\incomes\\EditIncome.js",["455","456","457","458","459","460","461","462","463"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\finance\\incomes\\DeleteIncome.js",["464","465","466"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\missions\\EditMission.js",["467","468","469","470","471","472","473"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loader from \"../Loader\";\r\nimport Avatar from \"../Avatar\";\r\n\r\nconst EditMission = (props) => {\r\n  let history = useHistory();\r\n  const { id, id2, id3 } = useParams();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [workers, setWorkers] = useState([]);\r\n\r\n  const [mission, setMission] = useState({\r\n    title: \"\",\r\n    worker: \"\",\r\n    project: \"\",\r\n    description: \"\",\r\n  });\r\n  const { title, worker, project, description } = mission;\r\n  const onInputChange = (e) => {\r\n    setMission({ ...mission, [e.target.name]: e.target.value });\r\n  };\r\n  function handleSelect(e) {\r\n    let { name, value } = e.target;\r\n    console.log(name);\r\n    console.log(value);\r\n    setMission({ ...mission, [name]: parseInt(value) });\r\n    console.log(mission);\r\n  }\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/mission/\" + id + \"/update/\";\r\n  var url2 = \"https://hashmali-backend.herokuapp.com/api/project/\";\r\n  var url3 = \"https://hashmali-backend.herokuapp.com/api/worker/\";\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  function patch_request() {\r\n    const newData = new FormData();\r\n    /* \r\n       title,\r\n       worker,\r\n           project,\r\n\r\n    description,\r\n        */\r\n    newData.append(\"title\", mission.title);\r\n    newData.append(\"worker\", mission.worker);\r\n    newData.append(\"project\", mission.project);\r\n    newData.append(\"description\", mission.description);\r\n\r\n    const requestOptions2 = {\r\n      method: \"PATCH\",\r\n      headers: { Authorization: toke },\r\n      body: newData,\r\n    };\r\n    return requestOptions2;\r\n  }\r\n  const loadProjects = async () => {\r\n    const data = await fetch(url2, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n\r\n    setStatus(data.status);\r\n    const projects_data = await data.json();\r\n    setProjects(projects_data);\r\n  };\r\n  const loadWorkers = async () => {\r\n    const data = await fetch(url3, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n\r\n    setStatus(data.status);\r\n    const workers_data = await data.json();\r\n    setWorkers(workers_data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      loadMission();\r\n      loadProjects();\r\n      loadWorkers();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const loadMission = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    setLoader(false);\r\n    const mission_data = await data.json();\r\n    setMission(mission_data);\r\n  };\r\n  console.log(status);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //Checking if password and phone are empty\r\n    if (!title) {\r\n      alert(\"please provide mission title...\");\r\n      return;\r\n    }\r\n    //Checking if password and phone are empty\r\n    if (!description) {\r\n      alert(\"please provide mission details...\");\r\n      return;\r\n    }\r\n    if (!project) {\r\n      alert(\"please choose a project...\");\r\n      return;\r\n    }\r\n    if (!worker) {\r\n      alert(\"please choose a worker...\");\r\n      return;\r\n    }\r\n\r\n    setLoader(true);\r\n    const data = await fetch(url, patch_request()).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    if (data.status != 200) {\r\n      alert(data.status);\r\n    }\r\n    setLoader(false);\r\n\r\n    const update = await loadMission();\r\n    if (data.status == 200) {\r\n      alert(\"Successfully Edited Mission!\");\r\n      history.push(\"/missions\");\r\n    }\r\n  };\r\n  if (loader) {\r\n    return (\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Loader />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto shadow p-5\">\r\n        <Link className=\"btn btn-dark\" to=\"/missions\">\r\n          Back to Home\r\n        </Link>\r\n\r\n        <h2 className=\"text-center mb-4\">Edit Mission Details:</h2>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Title\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter Mission title\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <h4 className=\"text-center mb-4\">Worker</h4>\r\n          <div>\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Worker\r\n            </Label>\r\n\r\n            <select\r\n              class=\"form-select\"\r\n              className=\"form-control form-control-lg\"\r\n              name={\"worker\"}\r\n              onChange={handleSelect}\r\n            >\r\n              <option>please choose worker:</option>\r\n              {workers\r\n                ? workers.map((worker) => (\r\n                    <option value={worker.id}>\r\n                      {worker.first_name + \" \" + worker.second_name}\r\n                    </option>\r\n                  ))\r\n                : \"\"}\r\n            </select>\r\n          </div>\r\n\r\n          <h4 className=\"text-center mb-4\">Project</h4>\r\n          <div>\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Project\r\n            </Label>\r\n            <select\r\n              class=\"form-select\"\r\n              className=\"form-control form-control-lg\"\r\n              name={\"project\"}\r\n              onChange={handleSelect}\r\n            >\r\n              <option>please choose a project:</option>\r\n              {projects\r\n                ? projects.map((project) => (\r\n                    <option value={project.id}>{project.project_code}</option>\r\n                  ))\r\n                : \"\"}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Label color=\"black\" as=\"a\" basic>\r\n              Description\r\n            </Label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter Mission content\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <button className=\"btn btn-dark btn-block\">Edit Mission</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default EditMission;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\missions\\Missions.js",["474","475","476","477","478","479"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\missions\\ViewMission.js",["480","481","482"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Loader from \"../Loader\";\r\n\r\nconst Mission = (props) => {\r\n  const [items, setItems] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [workers, setWorkers] = useState([]);\r\n\r\n  const [status, setStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const { id, id2, id3 } = useParams();\r\n\r\n  //console.log(toke)\r\n\r\n  var toke = \"Token \" + props.token + \" \";\r\n  var url =\r\n    \"https://hashmali-backend.herokuapp.com/api/mission/\" + id + \"/update/\";\r\n  var url2 =\r\n    \"https://hashmali-backend.herokuapp.com/api/worker/\" + id2 + \"/edit/\";\r\n  var url3 =\r\n    \"https://hashmali-backend.herokuapp.com/api/project/\" + id3 + \"/manage/\";\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: toke },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      fetchItems();\r\n      fetchProjects();\r\n      fetchWorkers();\r\n    }\r\n  }, [props.token]);\r\n\r\n  const fetchItems = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    setLoader(false);\r\n\r\n    const items = await data.json();\r\n    setItems(items);\r\n  };\r\n\r\n  const fetchProjects = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url3, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    setLoader(false);\r\n\r\n    const project_data = await data.json();\r\n    setProjects(project_data);\r\n  };\r\n\r\n  const fetchWorkers = async () => {\r\n    setLoader(true);\r\n    const data = await fetch(url2, requestOptions).catch((error) =>\r\n      console.error(error)\r\n    );\r\n    setStatus(data.status);\r\n    setLoader(false);\r\n\r\n    const worker_data = await data.json();\r\n    setWorkers(worker_data);\r\n  };\r\n\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <Link className=\"btn btn-dark\" to=\"/missions\">\r\n        Back to Home\r\n      </Link>\r\n      <h1 className=\"display-5\"> {\"Title:\" + \" \" + items.title}</h1>\r\n      <hr />\r\n      <ul className=\"list-group w-50\" style={{ justifyContent: \"center\" }}>\r\n        <li className=\"list-group-item\">\r\n          <h3>Worker: {workers.first_name + \" \" + workers.second_name}</h3>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <h3>Project: {projects.project_code}</h3>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <h3>Mission Details: {items.description}</h3>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <h3>Date: {items.date}</h3>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mission;\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\missions\\DeleteMission.js",["483","484","485","486"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\missions\\AddMission.js",["487","488","489","490","491","492","493","494"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\priceQuotation\\Annotate.js",[],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\priceQuotation\\manually\\CreateQuote.js",["495","496","497","498","499","500","501","502","503","504"],"C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\priceQuotation\\manually\\PdfCreate.js",["505","506","507","508","509","510"],"import React, { useState } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\n\r\nimport { Button } from \"semantic-ui-react\";\r\nimport SystemUpdateAltSharpIcon from \"@material-ui/icons/SystemUpdateAltSharp\";\r\nexport default function PdfCreate(props) {\r\n  function fix(str) {\r\n    return str.split(\"\").reverse().join(\"\");\r\n  }\r\n\r\n  const items = props.data;\r\n  var array = [];\r\n  items.map((item, index) => {\r\n    let obj = {};\r\n    obj[\"jobDescription\"] = item.jobDescription;\r\n    obj[\"plan\"] = item.plan;\r\n    obj[\"actual\"] = item.actual;\r\n    obj[\"pricePerUnit\"] = item.pricePerUnit;\r\n    obj[\"total\"] = item.total;\r\n    array.push(obj);\r\n  });\r\n\r\n  const exportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n    doc.addFont(\"./jspdfHebrewSupport/David-normal.ttf\", \"David\", \"normal\");\r\n    doc.setFont(\"David\");\r\n\r\n    doc.setFontSize(15);\r\n    const headers = [\r\n      [\r\n        \"jobDescription\",\r\n        \"profession\",\r\n        \"plan\",\r\n        \"actual\",\r\n        \"pricePerUnit\",\r\n        \"total\",\r\n      ],\r\n    ];\r\n    const data = array.map((item) => [\r\n      item.jobDescription,\r\n      item.profession,\r\n      item.plan,\r\n      item.actual,\r\n      item.pricePerUnit,\r\n      item.total,\r\n    ]);\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data,\r\n    };\r\n    const tableColumn = [\r\n      \"שם עובד\",\r\n      \"מספר פרויקט\",\r\n      \"תאריך דיוח\",\r\n      \"כניסה\",\r\n      \"יציאה\",\r\n      \"תיאור\",\r\n    ];\r\n    const tableRows = [\"מספר פרויקט\", \"תאריך דיוח\", \"כניסה\", \"יציאה\", \"\"];\r\n    const fixTableRows = [\r\n      fix(tableRows[0]),\r\n      fix(tableRows[1]),\r\n      fix(tableRows[2]),\r\n      fix(tableRows[3]),\r\n    ];\r\n    console.log(fixTableRows);\r\n    let title = \"הצעת מחיר\";\r\n    doc.text(fix(title), marginLeft, 40, {\r\n      styles: {\r\n        font: \"David\",\r\n        align: \"left\",\r\n        isSymmetricSwapping: true,\r\n        isInputVisual: true,\r\n        isOutputVisual: false,\r\n      },\r\n    });\r\n\r\n    doc.autoTable(content);\r\n\r\n    doc.save(\"price.pdf\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ReactHTMLTableToExcel\r\n        id=\"test-table-xls-button\"\r\n        className=\"download-table-xls-button\"\r\n        table=\"table-to-xls\"\r\n        filename=\"tablexls\"\r\n        sheet=\"tablexls\"\r\n        buttonText=\"Download as XLS\"\r\n      />\r\n      <table id=\"table-to-xls\">\r\n        <tr>\r\n          <th>סכום</th>\r\n          <th>מחיר יחידה</th>\r\n          <th>בפועל</th>\r\n          <th>בתוכנית</th>\r\n          <th>תיאור העבודה</th>\r\n        </tr>\r\n        <tr>\r\n          <td>Eve</td>\r\n          <td>Jackson</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Eve</td>\r\n          <td>Jackson</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n          <td>94</td>\r\n\r\n          <td>94</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Saedjaber\\Desktop\\finalProject\\website\\src\\components\\priceQuotation\\manually\\jspdfHebrewSupport\\David-normal.js",["511"],{"ruleId":"512","replacedBy":"513"},{"ruleId":"514","replacedBy":"515"},{"ruleId":"512","replacedBy":"516"},{"ruleId":"514","replacedBy":"517"},{"ruleId":"518","severity":1,"message":"519","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"522","severity":1,"message":"523","line":27,"column":6,"nodeType":"524","endLine":27,"endColumn":19,"suggestions":"525"},{"ruleId":"512","replacedBy":"526"},{"ruleId":"514","replacedBy":"527"},{"ruleId":"512","replacedBy":"528"},{"ruleId":"514","replacedBy":"529"},{"ruleId":"518","severity":1,"message":"530","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":25},{"ruleId":"518","severity":1,"message":"531","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"532","line":2,"column":8,"nodeType":"520","messageId":"521","endLine":2,"endColumn":13},{"ruleId":"518","severity":1,"message":"533","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":22},{"ruleId":"534","severity":1,"message":"535","line":9,"column":10,"nodeType":"536","endLine":9,"endColumn":55},{"ruleId":"518","severity":1,"message":"537","line":4,"column":10,"nodeType":"520","messageId":"521","endLine":4,"endColumn":14},{"ruleId":"538","severity":1,"message":"539","line":135,"column":16,"nodeType":"540","messageId":"541","endLine":135,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":138,"column":16,"nodeType":"540","messageId":"541","endLine":138,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":141,"column":16,"nodeType":"540","messageId":"541","endLine":141,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":146,"column":14,"nodeType":"540","messageId":"541","endLine":146,"endColumn":16},{"ruleId":"538","severity":1,"message":"539","line":149,"column":14,"nodeType":"540","messageId":"541","endLine":149,"endColumn":16},{"ruleId":"538","severity":1,"message":"539","line":152,"column":14,"nodeType":"540","messageId":"541","endLine":152,"endColumn":16},{"ruleId":"518","severity":1,"message":"542","line":181,"column":5,"nodeType":"520","messageId":"521","endLine":181,"endColumn":11},{"ruleId":"518","severity":1,"message":"543","line":182,"column":5,"nodeType":"520","messageId":"521","endLine":182,"endColumn":24},{"ruleId":"518","severity":1,"message":"544","line":183,"column":5,"nodeType":"520","messageId":"521","endLine":183,"endColumn":24},{"ruleId":"518","severity":1,"message":"545","line":184,"column":5,"nodeType":"520","messageId":"521","endLine":184,"endColumn":22},{"ruleId":"518","severity":1,"message":"546","line":190,"column":5,"nodeType":"520","messageId":"521","endLine":190,"endColumn":10},{"ruleId":"538","severity":1,"message":"539","line":196,"column":23,"nodeType":"540","messageId":"541","endLine":196,"endColumn":25},{"ruleId":"522","severity":1,"message":"547","line":261,"column":6,"nodeType":"524","endLine":261,"endColumn":19,"suggestions":"548"},{"ruleId":"522","severity":1,"message":"549","line":268,"column":6,"nodeType":"524","endLine":268,"endColumn":14,"suggestions":"550"},{"ruleId":"522","severity":1,"message":"551","line":275,"column":6,"nodeType":"524","endLine":275,"endColumn":16,"suggestions":"552"},{"ruleId":"522","severity":1,"message":"553","line":282,"column":6,"nodeType":"524","endLine":282,"endColumn":19,"suggestions":"554"},{"ruleId":"538","severity":1,"message":"555","line":336,"column":21,"nodeType":"540","messageId":"541","endLine":336,"endColumn":23},{"ruleId":"518","severity":1,"message":"556","line":341,"column":11,"nodeType":"520","messageId":"521","endLine":341,"endColumn":17},{"ruleId":"538","severity":1,"message":"539","line":342,"column":21,"nodeType":"540","messageId":"541","endLine":342,"endColumn":23},{"ruleId":"512","replacedBy":"557"},{"ruleId":"514","replacedBy":"558"},{"ruleId":"512","replacedBy":"559"},{"ruleId":"514","replacedBy":"560"},{"ruleId":"518","severity":1,"message":"561","line":2,"column":25,"nodeType":"520","messageId":"521","endLine":2,"endColumn":31},{"ruleId":"518","severity":1,"message":"562","line":7,"column":10,"nodeType":"520","messageId":"521","endLine":7,"endColumn":14},{"ruleId":"518","severity":1,"message":"563","line":7,"column":16,"nodeType":"520","messageId":"521","endLine":7,"endColumn":23},{"ruleId":"518","severity":1,"message":"519","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"522","severity":1,"message":"523","line":31,"column":6,"nodeType":"524","endLine":31,"endColumn":19,"suggestions":"564"},{"ruleId":"538","severity":1,"message":"539","line":37,"column":21,"nodeType":"540","messageId":"541","endLine":37,"endColumn":23},{"ruleId":"565","severity":1,"message":"566","line":76,"column":7,"nodeType":"536","endLine":76,"endColumn":33},{"ruleId":"518","severity":1,"message":"531","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"567","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":25},{"ruleId":"518","severity":1,"message":"519","line":11,"column":10,"nodeType":"520","messageId":"521","endLine":11,"endColumn":16},{"ruleId":"518","severity":1,"message":"568","line":11,"column":18,"nodeType":"520","messageId":"521","endLine":11,"endColumn":27},{"ruleId":"538","severity":1,"message":"539","line":84,"column":16,"nodeType":"540","messageId":"541","endLine":84,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":87,"column":16,"nodeType":"540","messageId":"541","endLine":87,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":90,"column":16,"nodeType":"540","messageId":"541","endLine":90,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":95,"column":14,"nodeType":"540","messageId":"541","endLine":95,"endColumn":16},{"ruleId":"538","severity":1,"message":"539","line":98,"column":14,"nodeType":"540","messageId":"541","endLine":98,"endColumn":16},{"ruleId":"538","severity":1,"message":"539","line":101,"column":14,"nodeType":"540","messageId":"541","endLine":101,"endColumn":16},{"ruleId":"518","severity":1,"message":"545","line":133,"column":5,"nodeType":"520","messageId":"521","endLine":133,"endColumn":22},{"ruleId":"538","severity":1,"message":"539","line":145,"column":23,"nodeType":"540","messageId":"541","endLine":145,"endColumn":25},{"ruleId":"538","severity":1,"message":"555","line":243,"column":23,"nodeType":"540","messageId":"541","endLine":243,"endColumn":25},{"ruleId":"538","severity":1,"message":"539","line":246,"column":23,"nodeType":"540","messageId":"541","endLine":246,"endColumn":25},{"ruleId":"518","severity":1,"message":"531","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"537","line":5,"column":10,"nodeType":"520","messageId":"521","endLine":5,"endColumn":14},{"ruleId":"518","severity":1,"message":"569","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":14},{"ruleId":"518","severity":1,"message":"519","line":10,"column":10,"nodeType":"520","messageId":"521","endLine":10,"endColumn":16},{"ruleId":"518","severity":1,"message":"568","line":10,"column":18,"nodeType":"520","messageId":"521","endLine":10,"endColumn":27},{"ruleId":"518","severity":1,"message":"570","line":14,"column":10,"nodeType":"520","messageId":"521","endLine":14,"endColumn":16},{"ruleId":"538","severity":1,"message":"539","line":38,"column":16,"nodeType":"540","messageId":"541","endLine":38,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":45,"column":14,"nodeType":"540","messageId":"541","endLine":45,"endColumn":16},{"ruleId":"518","severity":1,"message":"571","line":94,"column":5,"nodeType":"520","messageId":"521","endLine":94,"endColumn":19},{"ruleId":"538","severity":1,"message":"539","line":101,"column":23,"nodeType":"540","messageId":"541","endLine":101,"endColumn":25},{"ruleId":"538","severity":1,"message":"555","line":160,"column":21,"nodeType":"540","messageId":"541","endLine":160,"endColumn":23},{"ruleId":"538","severity":1,"message":"539","line":163,"column":21,"nodeType":"540","messageId":"541","endLine":163,"endColumn":23},{"ruleId":"518","severity":1,"message":"537","line":4,"column":10,"nodeType":"520","messageId":"521","endLine":4,"endColumn":14},{"ruleId":"538","severity":1,"message":"539","line":57,"column":16,"nodeType":"540","messageId":"541","endLine":57,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":62,"column":14,"nodeType":"540","messageId":"541","endLine":62,"endColumn":16},{"ruleId":"518","severity":1,"message":"571","line":108,"column":5,"nodeType":"520","messageId":"521","endLine":108,"endColumn":19},{"ruleId":"538","severity":1,"message":"539","line":115,"column":23,"nodeType":"540","messageId":"541","endLine":115,"endColumn":25},{"ruleId":"522","severity":1,"message":"572","line":178,"column":6,"nodeType":"524","endLine":178,"endColumn":19,"suggestions":"573"},{"ruleId":"522","severity":1,"message":"574","line":185,"column":6,"nodeType":"524","endLine":185,"endColumn":14,"suggestions":"575"},{"ruleId":"538","severity":1,"message":"555","line":211,"column":21,"nodeType":"540","messageId":"541","endLine":211,"endColumn":23},{"ruleId":"518","severity":1,"message":"556","line":216,"column":11,"nodeType":"520","messageId":"521","endLine":216,"endColumn":17},{"ruleId":"538","severity":1,"message":"539","line":217,"column":21,"nodeType":"540","messageId":"541","endLine":217,"endColumn":23},{"ruleId":"518","severity":1,"message":"576","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":14},{"ruleId":"522","severity":1,"message":"523","line":27,"column":6,"nodeType":"524","endLine":27,"endColumn":19,"suggestions":"577"},{"ruleId":"578","severity":1,"message":"579","line":70,"column":15,"nodeType":"580","endLine":70,"endColumn":30},{"ruleId":"578","severity":1,"message":"579","line":76,"column":55,"nodeType":"580","endLine":76,"endColumn":70},{"ruleId":"512","replacedBy":"581"},{"ruleId":"514","replacedBy":"582"},{"ruleId":"522","severity":1,"message":"523","line":31,"column":6,"nodeType":"524","endLine":31,"endColumn":19,"suggestions":"583"},{"ruleId":"538","severity":1,"message":"539","line":37,"column":21,"nodeType":"540","messageId":"541","endLine":37,"endColumn":23},{"ruleId":"512","replacedBy":"584"},{"ruleId":"514","replacedBy":"585"},{"ruleId":"518","severity":1,"message":"586","line":12,"column":10,"nodeType":"520","messageId":"521","endLine":12,"endColumn":14},{"ruleId":"518","severity":1,"message":"587","line":13,"column":9,"nodeType":"520","messageId":"521","endLine":13,"endColumn":20},{"ruleId":"518","severity":1,"message":"588","line":14,"column":9,"nodeType":"520","messageId":"521","endLine":14,"endColumn":19},{"ruleId":"522","severity":1,"message":"523","line":26,"column":6,"nodeType":"524","endLine":26,"endColumn":19,"suggestions":"589"},{"ruleId":"538","severity":1,"message":"555","line":39,"column":14,"nodeType":"540","messageId":"541","endLine":39,"endColumn":16},{"ruleId":"512","replacedBy":"590"},{"ruleId":"514","replacedBy":"591"},{"ruleId":"522","severity":1,"message":"523","line":24,"column":6,"nodeType":"524","endLine":24,"endColumn":19,"suggestions":"592"},{"ruleId":"538","severity":1,"message":"555","line":36,"column":14,"nodeType":"540","messageId":"541","endLine":36,"endColumn":16},{"ruleId":"538","severity":1,"message":"539","line":19,"column":16,"nodeType":"540","messageId":"541","endLine":19,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":24,"column":14,"nodeType":"540","messageId":"541","endLine":24,"endColumn":16},{"ruleId":"518","severity":1,"message":"593","line":36,"column":25,"nodeType":"520","messageId":"521","endLine":36,"endColumn":29},{"ruleId":"518","severity":1,"message":"594","line":36,"column":31,"nodeType":"520","messageId":"521","endLine":36,"endColumn":38},{"ruleId":"518","severity":1,"message":"595","line":36,"column":40,"nodeType":"520","messageId":"521","endLine":36,"endColumn":55},{"ruleId":"538","severity":1,"message":"539","line":43,"column":23,"nodeType":"540","messageId":"541","endLine":43,"endColumn":25},{"ruleId":"518","severity":1,"message":"596","line":81,"column":12,"nodeType":"520","messageId":"521","endLine":81,"endColumn":25},{"ruleId":"522","severity":1,"message":"597","line":102,"column":6,"nodeType":"524","endLine":102,"endColumn":19,"suggestions":"598"},{"ruleId":"522","severity":1,"message":"599","line":111,"column":6,"nodeType":"524","endLine":111,"endColumn":14,"suggestions":"600"},{"ruleId":"538","severity":1,"message":"555","line":193,"column":21,"nodeType":"540","messageId":"541","endLine":193,"endColumn":23},{"ruleId":"518","severity":1,"message":"556","line":198,"column":11,"nodeType":"520","messageId":"521","endLine":198,"endColumn":17},{"ruleId":"538","severity":1,"message":"539","line":199,"column":21,"nodeType":"540","messageId":"541","endLine":199,"endColumn":23},{"ruleId":"512","replacedBy":"601"},{"ruleId":"514","replacedBy":"602"},{"ruleId":"518","severity":1,"message":"530","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":25},{"ruleId":"518","severity":1,"message":"531","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"603","line":4,"column":10,"nodeType":"520","messageId":"521","endLine":4,"endColumn":14},{"ruleId":"518","severity":1,"message":"576","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":14},{"ruleId":"518","severity":1,"message":"561","line":6,"column":10,"nodeType":"520","messageId":"521","endLine":6,"endColumn":16},{"ruleId":"518","severity":1,"message":"604","line":8,"column":7,"nodeType":"520","messageId":"521","endLine":8,"endColumn":13},{"ruleId":"518","severity":1,"message":"605","line":10,"column":9,"nodeType":"520","messageId":"521","endLine":10,"endColumn":15},{"ruleId":"512","replacedBy":"606"},{"ruleId":"514","replacedBy":"607"},{"ruleId":"518","severity":1,"message":"608","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":19},{"ruleId":"518","severity":1,"message":"609","line":10,"column":8,"nodeType":"520","messageId":"521","endLine":10,"endColumn":15},{"ruleId":"518","severity":1,"message":"610","line":52,"column":7,"nodeType":"520","messageId":"521","endLine":52,"endColumn":11},{"ruleId":"522","severity":1,"message":"523","line":78,"column":6,"nodeType":"524","endLine":78,"endColumn":19,"suggestions":"611"},{"ruleId":"538","severity":1,"message":"539","line":97,"column":14,"nodeType":"540","messageId":"541","endLine":97,"endColumn":16},{"ruleId":"518","severity":1,"message":"537","line":2,"column":18,"nodeType":"520","messageId":"521","endLine":2,"endColumn":22},{"ruleId":"512","replacedBy":"612"},{"ruleId":"514","replacedBy":"613"},{"ruleId":"518","severity":1,"message":"614","line":6,"column":3,"nodeType":"520","messageId":"521","endLine":6,"endColumn":8},{"ruleId":"518","severity":1,"message":"615","line":7,"column":20,"nodeType":"520","messageId":"521","endLine":7,"endColumn":26},{"ruleId":"518","severity":1,"message":"616","line":8,"column":3,"nodeType":"520","messageId":"521","endLine":8,"endColumn":9},{"ruleId":"518","severity":1,"message":"603","line":9,"column":3,"nodeType":"520","messageId":"521","endLine":9,"endColumn":7},{"ruleId":"518","severity":1,"message":"617","line":16,"column":10,"nodeType":"520","messageId":"521","endLine":16,"endColumn":15},{"ruleId":"518","severity":1,"message":"618","line":16,"column":17,"nodeType":"520","messageId":"521","endLine":16,"endColumn":25},{"ruleId":"522","severity":1,"message":"619","line":26,"column":6,"nodeType":"524","endLine":26,"endColumn":14,"suggestions":"620"},{"ruleId":"621","severity":1,"message":"622","line":54,"column":7,"nodeType":"580","endLine":54,"endColumn":19},{"ruleId":"512","replacedBy":"623"},{"ruleId":"514","replacedBy":"624"},{"ruleId":"518","severity":1,"message":"586","line":12,"column":10,"nodeType":"520","messageId":"521","endLine":12,"endColumn":14},{"ruleId":"518","severity":1,"message":"587","line":13,"column":9,"nodeType":"520","messageId":"521","endLine":13,"endColumn":20},{"ruleId":"518","severity":1,"message":"588","line":14,"column":9,"nodeType":"520","messageId":"521","endLine":14,"endColumn":19},{"ruleId":"522","severity":1,"message":"523","line":26,"column":6,"nodeType":"524","endLine":26,"endColumn":19,"suggestions":"625"},{"ruleId":"538","severity":1,"message":"555","line":39,"column":14,"nodeType":"540","messageId":"541","endLine":39,"endColumn":16},{"ruleId":"538","severity":1,"message":"539","line":58,"column":16,"nodeType":"540","messageId":"541","endLine":58,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":63,"column":14,"nodeType":"540","messageId":"541","endLine":63,"endColumn":16},{"ruleId":"538","severity":1,"message":"539","line":76,"column":23,"nodeType":"540","messageId":"541","endLine":76,"endColumn":25},{"ruleId":"522","severity":1,"message":"626","line":148,"column":6,"nodeType":"524","endLine":148,"endColumn":19,"suggestions":"627"},{"ruleId":"522","severity":1,"message":"628","line":154,"column":6,"nodeType":"524","endLine":154,"endColumn":14,"suggestions":"629"},{"ruleId":"538","severity":1,"message":"555","line":196,"column":21,"nodeType":"540","messageId":"541","endLine":196,"endColumn":23},{"ruleId":"518","severity":1,"message":"556","line":201,"column":11,"nodeType":"520","messageId":"521","endLine":201,"endColumn":17},{"ruleId":"538","severity":1,"message":"539","line":202,"column":21,"nodeType":"540","messageId":"541","endLine":202,"endColumn":23},{"ruleId":"518","severity":1,"message":"567","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":25},{"ruleId":"518","severity":1,"message":"519","line":16,"column":10,"nodeType":"520","messageId":"521","endLine":16,"endColumn":16},{"ruleId":"538","severity":1,"message":"539","line":49,"column":16,"nodeType":"540","messageId":"541","endLine":49,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":54,"column":14,"nodeType":"540","messageId":"541","endLine":54,"endColumn":16},{"ruleId":"538","severity":1,"message":"539","line":69,"column":23,"nodeType":"540","messageId":"541","endLine":69,"endColumn":25},{"ruleId":"538","severity":1,"message":"555","line":186,"column":23,"nodeType":"540","messageId":"541","endLine":186,"endColumn":25},{"ruleId":"538","severity":1,"message":"539","line":189,"column":23,"nodeType":"540","messageId":"541","endLine":189,"endColumn":25},{"ruleId":"522","severity":1,"message":"630","line":210,"column":6,"nodeType":"524","endLine":210,"endColumn":19,"suggestions":"631"},{"ruleId":"518","severity":1,"message":"519","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"522","severity":1,"message":"523","line":31,"column":6,"nodeType":"524","endLine":31,"endColumn":19,"suggestions":"632"},{"ruleId":"538","severity":1,"message":"539","line":37,"column":21,"nodeType":"540","messageId":"541","endLine":37,"endColumn":23},{"ruleId":"633","severity":1,"message":"634","line":74,"column":44,"nodeType":"540","messageId":"635","endLine":74,"endColumn":45},{"ruleId":"518","severity":1,"message":"519","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"522","severity":1,"message":"523","line":27,"column":6,"nodeType":"524","endLine":27,"endColumn":19,"suggestions":"636"},{"ruleId":"633","severity":1,"message":"634","line":48,"column":44,"nodeType":"540","messageId":"635","endLine":48,"endColumn":45},{"ruleId":"518","severity":1,"message":"561","line":7,"column":10,"nodeType":"520","messageId":"521","endLine":7,"endColumn":16},{"ruleId":"518","severity":1,"message":"586","line":10,"column":10,"nodeType":"520","messageId":"521","endLine":10,"endColumn":14},{"ruleId":"518","severity":1,"message":"587","line":11,"column":9,"nodeType":"520","messageId":"521","endLine":11,"endColumn":20},{"ruleId":"518","severity":1,"message":"588","line":12,"column":9,"nodeType":"520","messageId":"521","endLine":12,"endColumn":19},{"ruleId":"522","severity":1,"message":"523","line":24,"column":6,"nodeType":"524","endLine":24,"endColumn":19,"suggestions":"637"},{"ruleId":"538","severity":1,"message":"555","line":37,"column":14,"nodeType":"540","messageId":"541","endLine":37,"endColumn":16},{"ruleId":"518","severity":1,"message":"576","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":14},{"ruleId":"518","severity":1,"message":"586","line":10,"column":10,"nodeType":"520","messageId":"521","endLine":10,"endColumn":14},{"ruleId":"518","severity":1,"message":"587","line":11,"column":9,"nodeType":"520","messageId":"521","endLine":11,"endColumn":20},{"ruleId":"518","severity":1,"message":"588","line":12,"column":9,"nodeType":"520","messageId":"521","endLine":12,"endColumn":19},{"ruleId":"522","severity":1,"message":"523","line":24,"column":6,"nodeType":"524","endLine":24,"endColumn":19,"suggestions":"638"},{"ruleId":"538","severity":1,"message":"555","line":37,"column":14,"nodeType":"540","messageId":"541","endLine":37,"endColumn":16},{"ruleId":"518","severity":1,"message":"576","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":14},{"ruleId":"518","severity":1,"message":"519","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"522","severity":1,"message":"523","line":31,"column":6,"nodeType":"524","endLine":31,"endColumn":19,"suggestions":"639"},{"ruleId":"538","severity":1,"message":"539","line":37,"column":21,"nodeType":"540","messageId":"541","endLine":37,"endColumn":23},{"ruleId":"518","severity":1,"message":"531","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"576","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":14},{"ruleId":"518","severity":1,"message":"640","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":20},{"ruleId":"518","severity":1,"message":"641","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":14},{"ruleId":"518","severity":1,"message":"519","line":15,"column":10,"nodeType":"520","messageId":"521","endLine":15,"endColumn":16},{"ruleId":"518","severity":1,"message":"568","line":15,"column":18,"nodeType":"520","messageId":"521","endLine":15,"endColumn":27},{"ruleId":"518","severity":1,"message":"642","line":16,"column":18,"nodeType":"520","messageId":"521","endLine":16,"endColumn":27},{"ruleId":"518","severity":1,"message":"643","line":17,"column":10,"nodeType":"520","messageId":"521","endLine":17,"endColumn":18},{"ruleId":"518","severity":1,"message":"644","line":17,"column":20,"nodeType":"520","messageId":"521","endLine":17,"endColumn":31},{"ruleId":"518","severity":1,"message":"645","line":19,"column":10,"nodeType":"520","messageId":"521","endLine":19,"endColumn":19},{"ruleId":"518","severity":1,"message":"646","line":19,"column":21,"nodeType":"520","messageId":"521","endLine":19,"endColumn":33},{"ruleId":"518","severity":1,"message":"647","line":20,"column":10,"nodeType":"520","messageId":"521","endLine":20,"endColumn":17},{"ruleId":"518","severity":1,"message":"648","line":20,"column":19,"nodeType":"520","messageId":"521","endLine":20,"endColumn":29},{"ruleId":"518","severity":1,"message":"649","line":66,"column":9,"nodeType":"520","messageId":"521","endLine":66,"endColumn":24},{"ruleId":"538","severity":1,"message":"555","line":93,"column":23,"nodeType":"540","messageId":"541","endLine":93,"endColumn":25},{"ruleId":"538","severity":1,"message":"539","line":96,"column":23,"nodeType":"540","messageId":"541","endLine":96,"endColumn":25},{"ruleId":"518","severity":1,"message":"576","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":14},{"ruleId":"518","severity":1,"message":"650","line":33,"column":9,"nodeType":"520","messageId":"521","endLine":33,"endColumn":24},{"ruleId":"522","severity":1,"message":"651","line":61,"column":6,"nodeType":"524","endLine":61,"endColumn":19,"suggestions":"652"},{"ruleId":"538","severity":1,"message":"555","line":93,"column":21,"nodeType":"540","messageId":"541","endLine":93,"endColumn":23},{"ruleId":"518","severity":1,"message":"556","line":98,"column":11,"nodeType":"520","messageId":"521","endLine":98,"endColumn":17},{"ruleId":"538","severity":1,"message":"539","line":99,"column":21,"nodeType":"540","messageId":"541","endLine":99,"endColumn":23},{"ruleId":"518","severity":1,"message":"576","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":14},{"ruleId":"518","severity":1,"message":"519","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"522","severity":1,"message":"523","line":27,"column":6,"nodeType":"524","endLine":27,"endColumn":19,"suggestions":"653"},{"ruleId":"633","severity":1,"message":"634","line":48,"column":44,"nodeType":"540","messageId":"635","endLine":48,"endColumn":45},{"ruleId":"518","severity":1,"message":"567","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":25},{"ruleId":"518","severity":1,"message":"640","line":9,"column":10,"nodeType":"520","messageId":"521","endLine":9,"endColumn":20},{"ruleId":"518","severity":1,"message":"641","line":12,"column":8,"nodeType":"520","messageId":"521","endLine":12,"endColumn":14},{"ruleId":"518","severity":1,"message":"519","line":16,"column":10,"nodeType":"520","messageId":"521","endLine":16,"endColumn":16},{"ruleId":"518","severity":1,"message":"645","line":20,"column":10,"nodeType":"520","messageId":"521","endLine":20,"endColumn":19},{"ruleId":"518","severity":1,"message":"646","line":20,"column":21,"nodeType":"520","messageId":"521","endLine":20,"endColumn":33},{"ruleId":"518","severity":1,"message":"647","line":21,"column":10,"nodeType":"520","messageId":"521","endLine":21,"endColumn":17},{"ruleId":"518","severity":1,"message":"648","line":21,"column":19,"nodeType":"520","messageId":"521","endLine":21,"endColumn":29},{"ruleId":"538","severity":1,"message":"539","line":49,"column":16,"nodeType":"540","messageId":"541","endLine":49,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":54,"column":14,"nodeType":"540","messageId":"541","endLine":54,"endColumn":16},{"ruleId":"518","severity":1,"message":"546","line":66,"column":48,"nodeType":"520","messageId":"521","endLine":66,"endColumn":53},{"ruleId":"538","severity":1,"message":"539","line":68,"column":23,"nodeType":"540","messageId":"541","endLine":68,"endColumn":25},{"ruleId":"538","severity":1,"message":"555","line":159,"column":23,"nodeType":"540","messageId":"541","endLine":159,"endColumn":25},{"ruleId":"538","severity":1,"message":"539","line":162,"column":23,"nodeType":"540","messageId":"541","endLine":162,"endColumn":25},{"ruleId":"522","severity":1,"message":"630","line":183,"column":6,"nodeType":"524","endLine":183,"endColumn":19,"suggestions":"654"},{"ruleId":"518","severity":1,"message":"519","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"522","severity":1,"message":"523","line":27,"column":6,"nodeType":"524","endLine":27,"endColumn":19,"suggestions":"655"},{"ruleId":"633","severity":1,"message":"634","line":48,"column":44,"nodeType":"540","messageId":"635","endLine":48,"endColumn":45},{"ruleId":"538","severity":1,"message":"539","line":58,"column":16,"nodeType":"540","messageId":"541","endLine":58,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":63,"column":14,"nodeType":"540","messageId":"541","endLine":63,"endColumn":16},{"ruleId":"518","severity":1,"message":"546","line":75,"column":48,"nodeType":"520","messageId":"521","endLine":75,"endColumn":53},{"ruleId":"538","severity":1,"message":"539","line":77,"column":23,"nodeType":"540","messageId":"541","endLine":77,"endColumn":25},{"ruleId":"522","severity":1,"message":"656","line":150,"column":6,"nodeType":"524","endLine":150,"endColumn":19,"suggestions":"657"},{"ruleId":"522","severity":1,"message":"628","line":156,"column":6,"nodeType":"524","endLine":156,"endColumn":14,"suggestions":"658"},{"ruleId":"538","severity":1,"message":"555","line":194,"column":21,"nodeType":"540","messageId":"541","endLine":194,"endColumn":23},{"ruleId":"518","severity":1,"message":"556","line":199,"column":11,"nodeType":"520","messageId":"521","endLine":199,"endColumn":17},{"ruleId":"538","severity":1,"message":"539","line":200,"column":21,"nodeType":"540","messageId":"541","endLine":200,"endColumn":23},{"ruleId":"518","severity":1,"message":"519","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"522","severity":1,"message":"523","line":31,"column":6,"nodeType":"524","endLine":31,"endColumn":19,"suggestions":"659"},{"ruleId":"538","severity":1,"message":"539","line":37,"column":21,"nodeType":"540","messageId":"541","endLine":37,"endColumn":23},{"ruleId":"518","severity":1,"message":"576","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":14},{"ruleId":"518","severity":1,"message":"660","line":10,"column":15,"nodeType":"520","messageId":"521","endLine":10,"endColumn":18},{"ruleId":"518","severity":1,"message":"661","line":10,"column":20,"nodeType":"520","messageId":"521","endLine":10,"endColumn":23},{"ruleId":"522","severity":1,"message":"662","line":91,"column":6,"nodeType":"524","endLine":91,"endColumn":19,"suggestions":"663"},{"ruleId":"538","severity":1,"message":"555","line":131,"column":21,"nodeType":"540","messageId":"541","endLine":131,"endColumn":23},{"ruleId":"518","severity":1,"message":"556","line":136,"column":11,"nodeType":"520","messageId":"521","endLine":136,"endColumn":17},{"ruleId":"538","severity":1,"message":"539","line":137,"column":21,"nodeType":"540","messageId":"541","endLine":137,"endColumn":23},{"ruleId":"518","severity":1,"message":"576","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":14},{"ruleId":"518","severity":1,"message":"586","line":11,"column":10,"nodeType":"520","messageId":"521","endLine":11,"endColumn":14},{"ruleId":"518","severity":1,"message":"587","line":12,"column":9,"nodeType":"520","messageId":"521","endLine":12,"endColumn":20},{"ruleId":"518","severity":1,"message":"588","line":13,"column":9,"nodeType":"520","messageId":"521","endLine":13,"endColumn":19},{"ruleId":"522","severity":1,"message":"523","line":25,"column":6,"nodeType":"524","endLine":25,"endColumn":19,"suggestions":"664"},{"ruleId":"538","severity":1,"message":"555","line":38,"column":14,"nodeType":"540","messageId":"541","endLine":38,"endColumn":16},{"ruleId":"518","severity":1,"message":"519","line":10,"column":10,"nodeType":"520","messageId":"521","endLine":10,"endColumn":16},{"ruleId":"522","severity":1,"message":"665","line":36,"column":6,"nodeType":"524","endLine":36,"endColumn":19,"suggestions":"666"},{"ruleId":"633","severity":1,"message":"634","line":82,"column":44,"nodeType":"540","messageId":"635","endLine":82,"endColumn":45},{"ruleId":"518","severity":1,"message":"576","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":14},{"ruleId":"518","severity":1,"message":"519","line":10,"column":10,"nodeType":"520","messageId":"521","endLine":10,"endColumn":16},{"ruleId":"522","severity":1,"message":"665","line":39,"column":6,"nodeType":"524","endLine":39,"endColumn":19,"suggestions":"667"},{"ruleId":"538","severity":1,"message":"539","line":45,"column":21,"nodeType":"540","messageId":"541","endLine":45,"endColumn":23},{"ruleId":"518","severity":1,"message":"576","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":14},{"ruleId":"518","severity":1,"message":"640","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":20},{"ruleId":"518","severity":1,"message":"641","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":14},{"ruleId":"518","severity":1,"message":"519","line":15,"column":10,"nodeType":"520","messageId":"521","endLine":15,"endColumn":16},{"ruleId":"518","severity":1,"message":"642","line":16,"column":18,"nodeType":"520","messageId":"521","endLine":16,"endColumn":27},{"ruleId":"538","severity":1,"message":"555","line":111,"column":23,"nodeType":"540","messageId":"541","endLine":111,"endColumn":25},{"ruleId":"538","severity":1,"message":"539","line":114,"column":23,"nodeType":"540","messageId":"541","endLine":114,"endColumn":25},{"ruleId":"522","severity":1,"message":"668","line":145,"column":6,"nodeType":"524","endLine":145,"endColumn":19,"suggestions":"669"},{"ruleId":"518","severity":1,"message":"531","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"518","severity":1,"message":"670","line":2,"column":10,"nodeType":"520","messageId":"521","endLine":2,"endColumn":13},{"ruleId":"518","severity":1,"message":"671","line":2,"column":15,"nodeType":"520","messageId":"521","endLine":2,"endColumn":18},{"ruleId":"518","severity":1,"message":"672","line":2,"column":20,"nodeType":"520","messageId":"521","endLine":2,"endColumn":24},{"ruleId":"518","severity":1,"message":"673","line":15,"column":8,"nodeType":"520","messageId":"521","endLine":15,"endColumn":25},{"ruleId":"518","severity":1,"message":"674","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":12},{"ruleId":"518","severity":1,"message":"675","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":17},{"ruleId":"518","severity":1,"message":"676","line":21,"column":10,"nodeType":"520","messageId":"521","endLine":21,"endColumn":14},{"ruleId":"518","severity":1,"message":"677","line":45,"column":7,"nodeType":"520","messageId":"521","endLine":45,"endColumn":11},{"ruleId":"538","severity":1,"message":"539","line":320,"column":22,"nodeType":"540","messageId":"541","endLine":320,"endColumn":24},{"ruleId":"518","severity":1,"message":"530","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":25},{"ruleId":"518","severity":1,"message":"561","line":6,"column":10,"nodeType":"520","messageId":"521","endLine":6,"endColumn":16},{"ruleId":"518","severity":1,"message":"678","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":32},{"ruleId":"679","severity":1,"message":"680","line":15,"column":27,"nodeType":"681","messageId":"682","endLine":15,"endColumn":29},{"ruleId":"518","severity":1,"message":"683","line":25,"column":9,"nodeType":"520","messageId":"521","endLine":25,"endColumn":18},{"ruleId":"518","severity":1,"message":"684","line":58,"column":11,"nodeType":"520","messageId":"521","endLine":58,"endColumn":22},{"ruleId":"685","severity":1,"message":"686","line":1,"column":1,"nodeType":"687","messageId":"541","fix":"688"},"no-native-reassign",["689"],"no-negated-in-lhs",["690"],["689"],["690"],"no-unused-vars","'status' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchItems'. Either include it or remove the dependency array.","ArrayExpression",["691"],["689"],["690"],["689"],["690"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Table' is defined but never used.","'TableScrollbar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Grid' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'id_img' is assigned a value but never used.","'driving_license_img' is assigned a value but never used.","'work_license_israel' is assigned a value but never used.","'work_license_type' is assigned a value but never used.","'image' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadWorker'. Either include it or remove the dependency array.",["692"],"React Hook useEffect has missing dependencies: 'loadWorker' and 'submitImage'. Either include them or remove the dependency array.",["693"],"React Hook useEffect has missing dependencies: 'loadWorker' and 'submitIDImage'. Either include them or remove the dependency array.",["694"],"React Hook useEffect has missing dependencies: 'loadWorker' and 'submitDriveImage'. Either include them or remove the dependency array.",["695"],"Expected '!==' and instead saw '!='.","'update' is assigned a value but never used.",["689"],["690"],["689"],["690"],"'Button' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.",["696"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'ImageFilterFrames' is defined but never used.","'setStatus' is assigned a value but never used.","'Loader' is defined but never used.","'loader' is assigned a value but never used.","'building_image' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProject'. Either include it or remove the dependency array.",["697"],"React Hook useEffect has missing dependencies: 'loadProject' and 'submitImage'. Either include them or remove the dependency array.",["698"],"'Avatar' is defined but never used.",["699"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["689"],["690"],["700"],["689"],["690"],"'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.",["701"],["689"],["690"],["702"],"'logo' is assigned a value but never used.","'manager' is assigned a value but never used.","'deputy_director' is assigned a value but never used.","'patch_request' is defined but never used.","React Hook useEffect has missing dependencies: 'getSelected', 'loadDetails', and 'loadWorkers'. Either include them or remove the dependency array.",["703"],"React Hook useEffect has missing dependencies: 'getSelected', 'loadDetails', 'loadWorkers', and 'submitImage'. Either include them or remove the dependency array.",["704"],["689"],["690"],"'Link' is defined but never used.","'source' is assigned a value but never used.","'styles' is assigned a value but never used.",["689"],["690"],"'CardActions' is defined but never used.","'Toolbar' is defined but never used.","'url2' is assigned a value but never used.",["705"],["689"],["690"],"'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'signOut'. Either include it or remove the dependency array.",["706"],"react/jsx-no-duplicate-props","No duplicate props allowed",["689"],["690"],["707"],"React Hook useEffect has missing dependencies: 'loadProjects' and 'loadReport'. Either include them or remove the dependency array.",["708"],"React Hook useEffect has a missing dependency: 'submitImage'. Either include it or remove the dependency array.",["709"],"React Hook useEffect has a missing dependency: 'loadProjects'. Either include it or remove the dependency array.",["710"],["711"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["712"],["713"],["714"],["715"],"'TimePicker' is defined but never used.","'moment' is defined but never used.","'setLoader' is assigned a value but never used.","'projects' is assigned a value but never used.","'setProjects' is assigned a value but never used.","'startTime' is assigned a value but never used.","'setStartTime' is assigned a value but never used.","'endTime' is assigned a value but never used.","'setEndTime' is assigned a value but never used.","'requestOptions2' is assigned a value but never used.","'requestOptions3' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadExpense'. Either include it or remove the dependency array.",["716"],["717"],["718"],["719"],"React Hook useEffect has missing dependencies: 'loadIncome' and 'loadProjects'. Either include them or remove the dependency array.",["720"],["721"],["722"],"'id2' is assigned a value but never used.","'id3' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadMission', 'loadProjects', and 'loadWorkers'. Either include them or remove the dependency array.",["723"],["724"],"React Hook useEffect has missing dependencies: 'fetchItems', 'fetchProjects', and 'fetchWorkers'. Either include them or remove the dependency array.",["725"],["726"],"React Hook useEffect has missing dependencies: 'loadProjects' and 'loadWorkers'. Either include them or remove the dependency array.",["727"],"'Col' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'VisibilityOffIcon' is defined but never used.","'Icon' is defined but never used.","'PdfCreate' is defined but never used.","'Prev' is defined but never used.","'toke' is assigned a value but never used.","'SystemUpdateAltSharpIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'exportPDF' is assigned a value but never used.","'tableColumn' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"728","text":"729"},"no-global-assign","no-unsafe-negation",{"desc":"730","fix":"731"},{"desc":"732","fix":"733"},{"desc":"734","fix":"735"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"730","fix":"740"},{"desc":"741","fix":"742"},{"desc":"743","fix":"744"},{"desc":"730","fix":"745"},{"desc":"730","fix":"746"},{"desc":"730","fix":"747"},{"desc":"730","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"730","fix":"753"},{"desc":"754","fix":"755"},{"desc":"730","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"730","fix":"763"},{"desc":"730","fix":"764"},{"desc":"730","fix":"765"},{"desc":"730","fix":"766"},{"desc":"730","fix":"767"},{"desc":"768","fix":"769"},{"desc":"730","fix":"770"},{"desc":"761","fix":"771"},{"desc":"730","fix":"772"},{"desc":"773","fix":"774"},{"desc":"759","fix":"775"},{"desc":"730","fix":"776"},{"desc":"777","fix":"778"},{"desc":"730","fix":"779"},{"desc":"780","fix":"781"},{"desc":"780","fix":"782"},{"desc":"783","fix":"784"},[-1,0],"","Update the dependencies array to be: [fetchItems, props.token]",{"range":"785","text":"786"},"Update the dependencies array to be: [loadWorker, props.token]",{"range":"787","text":"788"},"Update the dependencies array to be: [loadWorker, picUrl, submitImage]",{"range":"789","text":"790"},"Update the dependencies array to be: [idPicUrl, loadWorker, submitIDImage]",{"range":"791","text":"792"},"Update the dependencies array to be: [drivePicUrl, loadWorker, submitDriveImage]",{"range":"793","text":"794"},{"range":"795","text":"786"},"Update the dependencies array to be: [loadProject, props.token]",{"range":"796","text":"797"},"Update the dependencies array to be: [loadProject, picUrl, submitImage]",{"range":"798","text":"799"},{"range":"800","text":"786"},{"range":"801","text":"786"},{"range":"802","text":"786"},{"range":"803","text":"786"},"Update the dependencies array to be: [getSelected, loadDetails, loadWorkers, props.token]",{"range":"804","text":"805"},"Update the dependencies array to be: [getSelected, loadDetails, loadWorkers, picUrl, submitImage]",{"range":"806","text":"807"},{"range":"808","text":"786"},"Update the dependencies array to be: [loader, signOut]",{"range":"809","text":"810"},{"range":"811","text":"786"},"Update the dependencies array to be: [loadProjects, loadReport, props.token]",{"range":"812","text":"813"},"Update the dependencies array to be: [picUrl, submitImage]",{"range":"814","text":"815"},"Update the dependencies array to be: [loadProjects, props.token]",{"range":"816","text":"817"},{"range":"818","text":"786"},{"range":"819","text":"786"},{"range":"820","text":"786"},{"range":"821","text":"786"},{"range":"822","text":"786"},"Update the dependencies array to be: [loadExpense, props.token]",{"range":"823","text":"824"},{"range":"825","text":"786"},{"range":"826","text":"817"},{"range":"827","text":"786"},"Update the dependencies array to be: [loadIncome, loadProjects, props.token]",{"range":"828","text":"829"},{"range":"830","text":"815"},{"range":"831","text":"786"},"Update the dependencies array to be: [loadMission, loadProjects, loadWorkers, props.token]",{"range":"832","text":"833"},{"range":"834","text":"786"},"Update the dependencies array to be: [fetchItems, fetchProjects, fetchWorkers, props.token]",{"range":"835","text":"836"},{"range":"837","text":"836"},"Update the dependencies array to be: [loadProjects, loadWorkers, props.token]",{"range":"838","text":"839"},[740,753],"[fetchItems, props.token]",[7412,7425],"[loadWorker, props.token]",[7526,7534],"[loadWorker, picUrl, submitImage]",[7639,7649],"[idPicUrl, loadWorker, submitIDImage]",[7760,7773],"[drivePicUrl, loadWorker, submitDriveImage]",[857,870],[5510,5523],"[loadProject, props.token]",[5625,5633],"[loadProject, picUrl, submitImage]",[744,757],[861,874],[739,752],[659,672],[3090,3103],"[getSelected, loadDetails, loadWorkers, props.token]",[3249,3257],"[getSelected, loadDetails, loadWorkers, picUrl, submitImage]",[2522,2535],[599,607],"[loader, signOut]",[742,755],[4142,4155],"[loadProjects, loadReport, props.token]",[4235,4243],"[picUrl, submitImage]",[5871,5884],"[loadProjects, props.token]",[859,872],[742,755],[719,732],[720,733],[876,889],[1664,1677],"[loadExpense, props.token]",[753,766],[5039,5052],[752,765],[4203,4216],"[loadIncome, loadProjects, props.token]",[4296,4304],[875,888],[2633,2646],"[loadMission, loadProjects, loadWorkers, props.token]",[741,754],[1051,1064],"[fetchItems, fetchProjects, fetchWorkers, props.token]",[1203,1216],[3929,3942],"[loadProjects, loadWorkers, props.token]"]