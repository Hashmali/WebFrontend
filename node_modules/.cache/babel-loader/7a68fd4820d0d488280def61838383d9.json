{"ast":null,"code":"import React from 'react';\n\nfunction GET() {\n  // GET request using fetch with error handling\n  fetch('https://api.npms.io/v2/invalid-url').then(async response => {\n    const data = await response.json(); // check for error response\n\n    if (!response.ok) {\n      // get error message from body or default to response statusText\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    this.setState({\n      totalReactPackages: data.total\n    });\n  }).catch(error => {\n    this.setState({\n      errorMessage: error.toString()\n    });\n    console.error('There was an error!', error);\n  });\n}\n\n_c = GET;\nexport default GET;\n\nvar _c;\n\n$RefreshReg$(_c, \"GET\");","map":{"version":3,"sources":["C:/Users/Saed Jaber/Desktop/hashmalie-main/hashmalie-main/test 1.3/src/crud_test.js"],"names":["React","GET","fetch","then","response","data","json","ok","error","message","statusText","Promise","reject","setState","totalReactPackages","total","catch","errorMessage","toString","console"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,SAASC,GAAT,GAAe;AACb;AACAC,EAAAA,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACU,MAAMC,QAAN,IAAkB;AACpB,UAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB,CADoB,CAGpB;;AACA,QAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AACd;AACA,YAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BL,QAAQ,CAACM,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAED,SAAKK,QAAL,CAAc;AAAEC,MAAAA,kBAAkB,EAAET,IAAI,CAACU;AAA3B,KAAd;AACH,GAZL,EAaKC,KAbL,CAaWR,KAAK,IAAI;AACZ,SAAKK,QAAL,CAAc;AAAEI,MAAAA,YAAY,EAAET,KAAK,CAACU,QAAN;AAAhB,KAAd;AACAC,IAAAA,OAAO,CAACX,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,GAhBL;AAiBD;;KAnBQP,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nfunction GET() {\n  // GET request using fetch with error handling\n  fetch('https://api.npms.io/v2/invalid-url')\n      .then(async response => {\n          const data = await response.json();\n\n          // check for error response\n          if (!response.ok) {\n              // get error message from body or default to response statusText\n              const error = (data && data.message) || response.statusText;\n              return Promise.reject(error);\n          }\n\n          this.setState({ totalReactPackages: data.total })\n      })\n      .catch(error => {\n          this.setState({ errorMessage: error.toString() });\n          console.error('There was an error!', error);\n      });\n}\n\n\n\n\n\n\n\nexport default GET;\n\n\n\n"]},"metadata":{},"sourceType":"module"}